% Statetool() - This application makes extensive use of the GUI capabilities
% of Matlab R12. This function is used to analyze the system in 
% State-Space form, and find its time response.
% To run the application, just type "Statetool" in MATLAB Command window 
% at the matlab prompt. After this point all operations are 
% done with custom GUI controls.
%
% © Farid Golnaraghi 1993, 1999-2002
% The MechWorks Software Inc., Waterloo, Ont., Canada
% Version 2002 - First Trial
% Last Modified: 02/10/2002
%=============================================================

try
delete(999);   %this prevents the State tool from being used at the same time as the Controls tool. Both windows are given the handle 999.
end
    
Mwksglbl				% MechWorks Initialization Script File


guiele = struct;         % GUI Element Handles
cnstn = struct;          % Constants, including code blocks
vabls = struct;          % variables

%Initialize some variables
ii=1;
jj=1;
h=zeros(6,2);
Statemodel=0;
S=0;
rankS=0;
mA=0;
nA=0;
eigss=0;
evecss=0;
vabls.G=0;
numG=0;
denG=0;
Amat=[1];
Bmat=[1];
Cmat=[1];
Dmat=[0];
ICmat=[0];

%fontsize for the transfer function display. In the text command 9 is added
%to this so 12 is the default text size. This variable is altered in the
%place panels routine which is CONTWIND's resizefcn
vabls.DisplayTextSize = 3;

%These are all given bad handle values to accomodate an ishandle command in
%the cursor files
guiele.CursorWindow = -1;
guiele.cursorTxt = -1;
guiele.dragBox = -1;
guiele.CursorBar = -1;
guiele.CursorDot = -1;
guiele.PoleCursorDot = -1;

cnstn.cpheight = 600;    % Control Panel Height
cnstn.cpwidth = 275;     % Control Panel Width
cnstn.dpmargins = 1;     % Margins around the Display Panel
cnstn.mindpwidth = 600;    % Minimum Display Panel Width
cnstn.hmargin = 5;       % Panel Margin - Horizontal
cnstn.vmargin = 17;      % Panel Margin - Vertical
cnstn.icwidth = 30;      % response axis zoom and cursor button width

cnstn.bwidth = 180;      % Button Width
cnstn.bheight = 24;      % Button Height
cnstn.bvspace = 15;      % Vertical Space Between Buttons
cnstn.bhspace = (cnstn.cpwidth-2*cnstn.hmargin-cnstn.bwidth)/2;

cnstn.theight = 20;
cnstn.tspace = 20;

cnstn.tfStringCenter=.5219;  %center of the TF text objects displayed in Display Panel

cnstn.OFFWHITE = [1 1 0.9];   % Predefined Colors
cnstn.LIGHTGREY = [0.9 0.9 0.9];
cnstn.CYAN = [0.95 0.95 0.95];




%===================================================================
% CREATE FIGURE AND BASE PANELS
%===================================================================
cnstn.SwindCloseFcn=['closereq;',...        %The following is a list of all the variable names that get used by the Statetool and the Controls tool. This should leave the workspace clear of anything done by Controls or State after the window is closed.
                        'clear(''AcsysRoot'',''PoleZeroAxis'',''guiele'',''BLACK'',''RampResponse'',''BLUE'',''StepResponse'',''hPB'',''BOX1_H'',''TEDITBAK'',''ii'',',...
                        '''BOX1_W'',''TEXT_H'',''jj,BOX2_H'',''TFTYP'',''kk'',''BOX2_W'',''TFtype'',''mden'',''BOX3_W'',''TITLFORE'',''mnum'',''BackgroundAxis'',''TimeResponseMenu'',''nden'',',...
                        '''BlockAxisXlim'',''XRIGHT'',''nnum'',''BlockAxisYlim'',''XYLims'',''npoleTF'',''CYAN'',''ans'',''num'',''FrequencyResponseMenuclMagPhase'',''nzeroTF'',',...
                        '''GREY'',''cnstn'',''old_units'',''ImpulseResponse'',''dbFig'',''poleTF'',''LIGHTGREY'',''dbMagPhase'',''vabls'',''MARGIN'',''den'',''zeroTF'',',...
                        '''OpenLoopNyquist'',''dpoleTF'',''ParabolicReponse'',''dzeroTF'',''PhaseGainMargin'',''er_CalWind'',''BOX2_H'',''FrequencyResponseMenu'',''clMagPhase'',',...
                        '''Abar'',''S'',''h01text'',''nA'',''Amat'',''Smat'',''h02text'',''nC'',''Bbar'',''Statemodel'',''h03text'',''nchareq'',''Bmat'',''T'',''h04text'',''numG'',',...
                        '''Cbar'',''Vmat'',''h_DONE'',''rankA'',''Cmat'',''charA'',''h_MN'',''rankS'',''Dbar'',''chareq'',''h_plot'',''rankV'',''Dmat'',''denG'',''i'',''s'',',...
                        '''ICmat'',''eigss'',''input'',''t0'',''Mmat'',''evecss'',''jj'',''tset'',''PrintTimeResponseFigurefigure1'',''mA'',''tsim'',',...
                        '''Ptran'',''h'',''mC'',''tstep'',''Qtran'',''h0'',''mchareq'',''LSIMWIND'',''figure1'',''ts0'',''PrintTimeResponseFigure'',''t''),',...
                        ];

                    
                    
set(guiele.SWIND,'Units','pixels','Position',[20 120 276 600],...
	'Name','State Space Tool © 2002-2008 Farid Golnaraghi','dockcontrols','off','resize','off',...
	'color',cnstn.LIGHTGREY,'NumberTitle','off','Menubar','None','closerequestfcn',cnstn.SwindCloseFcn);

get(guiele.SWIND,'position')

guiele.StateControlPanel = uipanel(guiele.SWIND,'BorderType','none','CreateFcn','',...
    'BackgroundColor',cnstn.LIGHTGREY,'Units','pixels','Position',[0 0 278 600],'Title','');


guiele.StateBlockPanel=uipanel('parent',guiele.StateControlPanel,'tag','guiele.BlockPanel','units','pixels',...
    'Background',LIGHTGREY,'bordertype','etchedin','title','Block Diagram',...
	'Position',[4 446 272 147]);

guiele.StateInputPanel=uipanel('parent',guiele.StateControlPanel,'tag','guiele.FractionsPanel','Units','pixels',...
	'Background',LIGHTGREY,'bordertype','etchedin','title','Input Module',...
	'Position',[4 132 272 305]);

guiele.StateButtonsPanel=uipanel('parent',guiele.StateControlPanel,'tag','guiele.ButtonsPanel','units','pixels',...
    'background',LIGHTGREY,'bordertype','etchedin','title','Buttons',...
    'position',[4 5 272 120]);


guiele.StateBlockAxis=axes('parent',guiele.StateBlockPanel,'tag','guiele.StateBlockPanel','units','normal','position',[0 0 1 1],'visible','off');

guiele.BlockImage=image(imread('StateBlock','bmp'));

set(guiele.StateBlockAxis,'visible','off');


%===================================================================
% Create UIMENUS
%===================================================================


%=============================== Calculation Module ====================================
guiele.CalculateDisplay=uimenu(guiele.SWIND,'label','Calculate/Display');

guiele.Eigen=uimenu(guiele.CalculateDisplay,'label','Eigen vals & vects of A',...
   'CallBack',[...
        'commandwindow;',...
    	'disp('' The A matrix is:''),Amat,',...
        '[mA,nA]=size(Amat);rankA=rank(Amat);',...
        'disp('' Characteristic Polynomial: ''),chareq=poly(Amat);[mchareq,nchareq]=size(chareq);syms ''s'';poly2sym(chareq,s),',...
        '[evecss,eigss]=eig(Amat);disp('' Eigenvalues of A = Diagonal Canonical Form of A is: ''),Abar=eigss,disp('' Eigen Vectors are  ''),T=evecss,',...
    ]);

guiele.StateSpaceCalc=uimenu(guiele.CalculateDisplay,'label','State Space Calculations',...
	'CallBack',[,...
        'commandwindow;',...
        'set(guiele.Controlability,''enable'',''On''),',...
        'set(guiele.Observability,''enable'',''On''),',...
        'set(guiele.StateTimeResponseMenu,''enable'',''on'');',...
    	'disp('' State-Space Model is:''),Statemodel=ss(Amat,Bmat,Cmat,Dmat),',...
        '[mA,nA]=size(Amat);rankA=rank(Amat);',...
        'disp('' Characteristic Polynomial: ''),chareq=poly(Amat);[mchareq,nchareq]=size(chareq);syms ''s'';poly2sym(chareq,s),',...
        'disp('' Equivalent Transfer Function Model is: ''),[numG,denG]=ss2tf(Amat,Bmat,Cmat,Dmat);vabls.G=tf(numG,denG); vabls.G=minreal(vabls.G); vabls.G,',...    %the outputs are suppresed when a calculation is done because that just displays the structure "vabls".
        'disp('' Pole, Zero Form: ''),vabls.G=zpk(vabls.G); vabls.G,',...
    ]);

guiele.Controlability=uimenu(guiele.CalculateDisplay,'label','Controlability','enable','off',...
	'CallBack',[...
        'commandwindow;',...
        'set(guiele.Controlability,''enable'',''Off''),',...
        'Statemodel=ss(Amat,Bmat,Cmat,Dmat);',...
        '[mA,nA]=size(Amat);rankA=rank(Amat);',...
        'disp('' The Controllability Matrix [B AB A^2B ...] is = ''),Smat=ctrb(Amat,Bmat),',...
        'rankS=rank(Smat);',...
        'if rankS~=rankA,disp('' The system is therefore Not Controllable, rank of S Matrix is = ''),rankS,',...
        'else,disp('' The system is therefore Controllable, rank of S Matrix is =''),rankS,',...
        'end,',...
        'charA=poly(Amat);',...
        'Ptran=zeros(mA,nA);',...
        'for i=1:mA,Ptran(i,mA-i+1:-1:1)=charA(1:mA-i+1);end,Mmat=Ptran,',...
        'disp(''The Controllability Canonical Form (CCF) Transformation matrix is: ''),Ptran=Smat*Ptran,',...
        'disp(''The transformed matrices using CCF are: ''),',...
        'Abar=inv(Ptran)*Amat*Ptran,Bbar=inv(Ptran)*Bmat,Cbar=Cmat*Ptran,Dbar=Dmat,',...
    ]);

guiele.Observability=uimenu(guiele.CalculateDisplay,'label','Observability','enable','off',...
	'CallBack',[...
        'commandwindow;',...
        'set(guiele.Observability,''enable'',''Off''),',...
    	'Statemodel=ss(Amat,Bmat,Cmat,Dmat);',...
        'rankA=rank(Amat);',...
        '[mC,nC]=size(Cmat);',...
        'Vmat=Cmat;',...
        'for i=1:nC-1, Vmat=[Cmat;Vmat*Amat]; end,',...
        'rankV=rank(Vmat);',...
        'disp(''The Observability Matrix (transpose:[C CA CA^2 ...]) is =''), Vmat,',...
        'if rankV~=rankA, disp(''The System is therefore Not Observable, rank of V Matrix is = ''),rankV,',...
        'else, disp(''The System is therefore Observable, rank of V Matrix is =''),rankV,',...
        'end,',...
        'charA=poly(Amat);',...
        'Ptran=zeros(mA,nA);',...
        'for i=1:mA,Ptran(i,mA-i+1:-1:1)=charA(1:mA-i+1);end,',...
        'Smat=ctrb(Amat,Bmat);Mmat=Ptran,Ptran=Smat*Ptran;Qtran=inv(Vmat)*inv(Mmat);',...
        'disp(''The Observability Canonical Form (OCF) Transformation matrix is: ''),Qtran,',...
        'disp(''The transformed matrices using OCF are: ''),',...
        'Abar=inv(Qtran)*Amat*Qtran,Bbar=inv(Qtran)*Bmat,Cbar=Cmat*Qtran,Dbar=Dmat,',...
    ]);


%===============================Time Response========================

guiele.StateTimeResponseMenu=uimenu(guiele.SWIND,'label','Time Response','enable','off');

guiele.StateStepResponse=uimenu(guiele.StateTimeResponseMenu,'label','Step Response',...
   'CallBack',[...
   'figure(''Units'',''Normal'',''Name'',''Step Response'',''position'',[1.25*BOX2_W 0 0.75 0.8]),',...
   'step(Statemodel)']);

guiele.StateImpulseResponse=uimenu(guiele.StateTimeResponseMenu,'label','Impulse',...
   'CallBack',[...
   'figure(''Units'',''Normal'',''Name'',''Impulse Response'',''position'',[1.25*BOX2_W 0 0.75 0.8]),',...
   'impulse(Statemodel)']);

guiele.StateNaturalResponse=uimenu(guiele.StateTimeResponseMenu,'label','Natural Response',...
   'CallBack',[...
   'figure(''Units'',''Normal'',''Name'',''Natural Response'',''position'',[1.25*BOX2_W 0 0.75 0.8]),',...
   'initial(Statemodel,ICmat)']);

guiele.StateOtherInputs=uimenu(guiele.StateTimeResponseMenu,'label','Other Inputs',...
   'CallBack',['GETLSIM']);

%...
%    'figure(''Units'',''Normal'',''Name'',''Time Response'',''position'',[1.25*BOX2_W 0 0.75 0.8]),',...
%    

guiele.AccessoriesMenu=uimenu(guiele.SWIND,'label','Accessories');
h_MN(01)=uimenu(guiele.AccessoriesMenu,'Label','&Calculator','CallBack','!calc.exe;');
h_MN(02)=uimenu(guiele.AccessoriesMenu,'Label','&Unit Conversion','CallBack','conver');
h_MN(03)=uimenu(guiele.AccessoriesMenu,'Label','&Help','CallBack','Statetool_hlp');

%===================================================================
%Stuff in Input Module
%===================================================================

guiele.TextBoxA=uicontrol(guiele.StateInputPanel,'tag','guiele.TextBoxA','style','edit','units','pixels',...   
    'position',[20 15+4*cnstn.theight+4*cnstn.tspace 232 cnstn.theight],'string',num2str(Amat),...
    'callback','Amat=str2num(get(guiele.TextBoxA,''string''));');
    
guiele.TextBoxB=uicontrol(guiele.StateInputPanel,'tag','guiele.TextBoxB','style','edit','units','pixels',...   
    'position',[20 15+3*cnstn.theight+3*cnstn.tspace 232 cnstn.theight],'string',num2str(Bmat),...
    'callback','Bmat=str2num(get(guiele.TextBoxB,''string''));');

guiele.TextBoxC=uicontrol(guiele.StateInputPanel,'tag','guiele.TextBoxC','style','edit','units','pixels',...   
    'position',[20 15+2*cnstn.theight+2*cnstn.tspace 232 cnstn.theight],'string',num2str(Cmat),...
    'callback','Cmat=str2num(get(guiele.TextBoxC,''string''));');

guiele.TextBoxD=uicontrol(guiele.StateInputPanel,'tag','guiele.TextBoxD','style','edit','units','pixels',...   
    'position',[20 15+cnstn.theight+cnstn.tspace 232 cnstn.theight],'string',num2str(Dmat),...
    'callback','Dmat=str2num(get(guiele.TextBoxD,''string''));');

guiele.TextBoxIC=uicontrol(guiele.StateInputPanel,'tag','guiele.TextBoxA','style','edit','units','pixels',....
    'position',[20 15 232 cnstn.theight],'string',num2str(ICmat),...
    'callback','ICmat=str2num(get(guiele.TextBoxIC,''string''));');

guiele.LabelA=uicontrol(guiele.StateInputPanel,'tag','guiele.LabelA','style','text','units','pixels',...
    'position',[22 38+4*cnstn.theight+4*cnstn.tspace 10 10],'string','A','backgroundcolor',cnstn.LIGHTGREY);

guiele.LabelB=uicontrol(guiele.StateInputPanel,'tag','guiele.LabelB','style','text','units','pixels',...
    'position',[22 38+3*cnstn.theight+3*cnstn.tspace 10 10],'string','B','backgroundcolor',cnstn.LIGHTGREY);

guiele.LabelC=uicontrol(guiele.StateInputPanel,'tag','guiele.LabelC','style','text','units','pixels',...
    'position',[22 38+2*cnstn.theight+2*cnstn.tspace 10 10],'string','C','backgroundcolor',cnstn.LIGHTGREY);

guiele.LabelD=uicontrol(guiele.StateInputPanel,'tag','guiele.LabelD','style','text','units','pixels',...
    'position',[22 38+cnstn.theight+cnstn.tspace 10 10],'string','D','backgroundcolor',cnstn.LIGHTGREY);

guiele.LabelIC=uicontrol(guiele.StateInputPanel,'tag','guiele.LabelIC','style','text','units','pixels','horizontalalignment','left',...
    'position',[22 38 80 10],'string','Intitial Conditions','backgroundcolor',cnstn.LIGHTGREY);

cnstn.InstructionsString={'Enter coefficient Matrices.',...
                         'eg. For a 3x3 identity matrix enter [1 0 0;0 1 0;0 0 1]',...
                         '',...
                         '[1;0;1] is a 3x1 column [1 0 0] is a 1x3 row.'};

guiele.InputInstructions=uicontrol(guiele.StateInputPanel,'tag','guiele.InputInstructions','style','text','units','pixels',...
    'position',[10 220 252 63],'string',cnstn.InstructionsString,'backgroundcolor',cnstn.LIGHTGREY);
                     

%=========================== Utilities=====================================

guiele.StateReset=uicontrol(guiele.StateButtonsPanel,'Style','PushButton','Units','pixels',...
	'Position',[44 30+cnstn.bheight+cnstn.bvspace cnstn.bwidth cnstn.bheight],...
	'String','Reset','Fontsize',10,'FontWeight','Demi','callback','eval(get(gcf,''closerequestfcn'')); Statetool');


guiele.StateCloseWindow=uicontrol(guiele.StateButtonsPanel,'Style','PushButton','Units','pixels',...
	'Position',[44 30 cnstn.bwidth cnstn.bheight],...
	'String','Close Window','Fontsize',10,'FontWeight','Demi','Callback','eval(get(gcf,''closerequestfcn''))');


