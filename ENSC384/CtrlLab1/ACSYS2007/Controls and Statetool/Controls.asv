%Controls() -	A MATLAB based application used to find transfer functions 
% of single-loop feedback systems.
%
% This application makes extensive use of the GUI capabilities of Matlab
% R12. This script is used to enter the system transfer function in a simple block diagram form, calculate 
% the closed-loop Transfer funcation, find its time and frequency responses, and perform 
% root locus or frequency analysis and design.

% To run the application, just type "Controls" in MATLAB Command window 
% at the matlab prompt. After this point all operations are 
% done with custom GUI controls.
%
% © Farid Golnaraghi 1993, 1999-2002
% Version (2007.5.11) Michael Ages
% Last Modified: 07/03/2007
%==========================================================================
% A list of most of the objects created by this file is at the bottom
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

try
delete(999);    %this prevents the Controls tool from being used at the same time as the State tool. Both windows are given the handle 999.
end


Mwksglbl				% Initialization Script File

guiele = struct;         % GUI Element Handles
cnstn = struct;          % Display Property Constants
vabls = struct;          % variables

%Initialize some variables

guiele.h=zeros(6,2);
XRIGHT=0;
TFtype=0;
TFTYP=1;
vabls.Row1=[1];
vabls.Row2=[1];
vabls.Row3=[1];
vabls.Row4=[1];
vabls.Row5=[1];
vabls.Row6=[1];
vabls.Row7=1;
vabls.button_chooser=0;       %this variable tells which button in the transfer function diagram the user has pressed.


%These commands all take longer the first time they are done. Initializing
%them speeds up the first press of the enter button on guiele.PolyEnterPanel
vabls.G=tf(vabls.Row1,vabls.Row2);        
vabls.G_c=tf(vabls.Row3,vabls.Row4);
vabls.H=tf(vabls.Row5,vabls.Row6);
vabls.otf=minreal(vabls.G*vabls.G_c);
vabls.lptf=minreal(vabls.G*vabls.G_c*vabls.H);
vabls.ctf=minreal(vabls.G*vabls.G_c/(1+vabls.G*vabls.G_c*vabls.H));
[num,den]=tfdata(vabls.ctf,'v');
vabls.ctf2=zpk(vabls.ctf);
zeroTF=(zero(vabls.ctf)'');
poleTF=(pole(vabls.ctf)'');

%These are given values because there are delete commands that run before their creation
BackgroundAxis=[];      
PoleZeroAxis=[];

%fontsize for the transfer function display. In the text command 9 is added
%to this so 12 is the default text size. This variable is altered in the
%place panels routine which is CONTWIND's resizefcn
vabls.DisplayTextSize = 3;

%These are all given bad handle values to accomodate an ishandle command in
%the cursor files
guiele.CursorWindow = -1;
guiele.cursorTxt = -1;
guiele.dragBox = -1;
guiele.CursorBar = -1;
guiele.CursorDot = -1;
guiele.PoleCursorDot = -1;

cnstn.cpheight = 600;    % Control Panel Height
cnstn.cpwidth = 275;     % Control Panel Width
cnstn.dpmargins = 1;     % Margins around the Display Panel
cnstn.mindpwidth = 600;    % Minimum Display Panel Width
cnstn.hmargin = 5;       % Panel Margin - Horizontal
cnstn.vmargin = 17;      % Panel Margin - Vertical
cnstn.icwidth = 30;      % response axis zoom and cursor button width

cnstn.bwidth = 180;      % Button Width
cnstn.bheight = 24;      % Button Height
cnstn.bvspace = 15;      % Vertical Space Between Buttons
cnstn.bhspace = (cnstn.cpwidth-2*cnstn.hmargin-cnstn.bwidth)/2;

cnstn.tfStringCenter=.5219;  %center of the TF text objects displayed in Display Panel

cnstn.OFFWHITE = [1 1 0.9];   % Predefined Colors
cnstn.LIGHTGREY = [0.9 0.9 0.9];
cnstn.CYAN = [0.95 0.95 0.95];

%data for pointer shapes

cnstn.MagnifyingGlass = [NaN NaN NaN NaN   1   1   1   1 NaN NaN NaN NaN NaN NaN NaN NaN;...
                        NaN NaN   1   1 NaN NaN NaN NaN   1   1 NaN NaN NaN NaN NaN NaN;...
                        NaN   1 NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN NaN;...
                        NaN   1 NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN NaN;...
                          1 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN;...
                          1 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN;...
                          1 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN;...
                          1 NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN;...
                        NaN   1 NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN NaN;...
                        NaN   1 NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN NaN NaN NaN NaN;...
                        NaN NaN   1   1 NaN NaN NaN NaN   1   1   1   1 NaN NaN NaN NaN;...
                        NaN NaN NaN NaN   1   1   1   1 NaN NaN   1   1   1 NaN NaN NaN;...
                        NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1   1   1 NaN NaN;...
                        NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1   1   1 NaN;...
                        NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1   1   1;...
                        NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN   1 NaN];

 cnstn.dataCursor =  [NaN NaN  1  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN;...
                     NaN NaN  1  NaN NaN NaN 1    1   1  NaN NaN NaN NaN NaN NaN NaN;...
                     1    1   1   1   1  NaN 1   NaN  1    1 NaN NaN NaN NaN NaN NaN;...
                     NaN NaN  1  NaN NaN NaN NaN NaN  1  NaN  1   1  NaN NaN NaN NaN;...
                     NaN NaN  1  NaN NaN NaN NaN NaN  1  NaN NaN  1   1  NaN NaN NaN;...
                     NaN NaN NaN NaN NaN NaN NaN NaN  1  NaN NaN  1   1   1  NaN NaN;...
                     NaN NaN NaN  1  NaN NaN NaN  1   1  NaN  1   1  NaN  1   1  NaN;...
                     NaN NaN  1  NaN  1  NaN NaN  1   1  NaN NaN  1  NaN  1  NaN  1 ;...
                     NaN NaN  1  NaN NaN   1  1   1  NaN NaN NaN NaN NaN  1  NaN  1 ;...
                     NaN NaN NaN  1  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  1 ;...
                     NaN NaN NaN  1  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  1 ;...
                     NaN NaN NaN NaN  1  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  1 ;...
                     NaN NaN NaN NaN NaN  1  NaN NaN NaN NaN NaN NaN NaN NaN  1  NaN;...  
                     NaN NaN NaN NaN NaN NaN  1   1  NaN NaN NaN NaN NaN  1  NaN NaN;...
                     NaN NaN NaN NaN NaN NaN NaN  1  NaN NaN NaN NaN NaN  1  NaN NaN;...
                     NaN NaN NaN NaN NaN NaN NaN NaN   1  1   1   1   1  NaN NaN NaN];

                 
% Figure Title
cnstn.title_string = 'Controller Design Tool © 2002-2008 Farid Golnaraghi';

%Initialize some variables
guiele.ResponsePlotAxis=-1;
guiele.PolyEnterPanel=-1;
guiele.pdEnterPanel=-1;
guiele.EnterPanelLL=-1;
guiele.PrintFigButton=-1;

%===================================================================
% CREATE FIGURE AND BASE PANELS
%===================================================================

%This is a list of alomost all the variables that can be created by the
%Controls tool and the State tool.
cnstn.ContwindCloseFcn=[...
                        'closereq,',...
                        'clear(''AcsysRoot'',''PoleZeroAxis'',''guiele'',''BLACK'',''RampResponse'',''BLUE'',''StepResponse'',''hPB'',''BOX1_H'',''TEDITBAK'',''ii'',',...
                        '''BOX1_W'',''TEXT_H'',''jj,BOX2_H'',''TFTYP'',''kk'',''BOX2_W'',''TFtype'',''mden'',''BOX3_W'',''TITLFORE'',''mnum'',''BackgroundAxis'',''TimeResponseMenu'',''nden'',',...
                        '''BlockAxisXlim'',''XRIGHT'',''nnum'',''BlockAxisYlim'',''XYLims'',''npoleTF'',''CYAN'',''ans'',''num'',''FrequencyResponseMenuclMagPhase'',''nzeroTF'',',...
                        '''GREY'',''cnstn'',''old_units'',''ImpulseResponse'',''dbFig'',''poleTF'',''LIGHTGREY'',''dbMagPhase'',''vabls'',''MARGIN'',''den'',''zeroTF'',',...
                        '''OpenLoopNyquist'',''dpoleTF'',''ParabolicReponse'',''dzeroTF'',''PhaseGainMargin'',''er_CalWind'',''BOX2_H'',''FrequencyResponseMenu'',''clMagPhase'',',...
                        '''Abar'',''S'',''h01text'',''nA'',''Amat'',''Smat'',''h02text'',''nC'',''Bbar'',''Statemodel'',''h03text'',''nchareq'',''Bmat'',''T'',''h04text'',''numG'',',...
                        '''Cbar'',''Vmat'',''h_DONE'',''rankA'',''Cmat'',''charA'',''h_MN'',''rankS'',''Dbar'',''chareq'',''h_plot'',''rankV'',''Dmat'',''denG'',''i'',''s'',',...
                        '''ICmat'',''eigss'',''input'',''t0'',''Mmat'',''evecss'',''jj'',''tset'',''PrintTimeResponseFigurefigure1'',''mA'',''tsim'',',...
                        '''Ptran'',''h'',''mC'',''tstep'',''Qtran'',''h0'',''mchareq'',''LSIMWIND'',''figure1'',''ts0'',''PrintTimeResponseFigure'',''t''),',...
                        ];

guiele.CONTWIND = figure(999);
set(guiele.CONTWIND,'Units','Normal','Position',[0.005 0.03 .99 0.91],...
	'Name',cnstn.title_string,'ResizeFcn','eval(cnstn.placePanels)','dockcontrols','off',...
	'color',cnstn.LIGHTGREY,'NumberTitle','off','Menubar','None','pointershapecdata',cnstn.MagnifyingGlass,'closerequestfcn',cnstn.ContwindCloseFcn);

guiele.ControlPanel = uipanel(guiele.CONTWIND,'BorderType','none','CreateFcn','',...
    'BackgroundColor',cnstn.LIGHTGREY,'Units','pixels','Position',[0 0 1 1],'Title','');

guiele.DisplayPanel = uipanel(guiele.CONTWIND,'BorderType','etchedin','CreateFcn','','tag','guiele.DisplayPanel',...
    'BackgroundColor',cnstn.OFFWHITE,'Units','pixels','Position',[275 0 1 1],'Title','');


% cnstn.placePanels is the resize fcn for guiele.CONTWIND. It prevents the
% window from being made too small. It also repositions some of the panels
% to fit the newly sized window.
cnstn.placePanels = ['old_units = get(guiele.CONTWIND,''Units'');'...
                'set(guiele.CONTWIND,''Units'',''pixels'');'...
                'figpos = get(guiele.CONTWIND,''Position'');'...
                'if figpos(3) < (cnstn.mindpwidth + cnstn.cpwidth) figpos(3) = (cnstn.mindpwidth + cnstn.cpwidth);end,'...
                'if figpos(4) < (cnstn.cpheight) figpos(2) = (figpos(2)+figpos(4)-cnstn.cpheight); figpos(4) = cnstn.cpheight; end,'...
                'set(guiele.CONTWIND,''Position'',figpos);'...               
                'set(guiele.ControlPanel,''Position'',[0, figpos(4) - cnstn.cpheight, cnstn.cpwidth, cnstn.cpheight]);'...
                'set(guiele.DisplayPanel,''Position'',[cnstn.cpwidth+cnstn.dpmargins 0+cnstn.dpmargins figpos(3)-cnstn.cpwidth-2*cnstn.dpmargins figpos(4)-2*cnstn.dpmargins]);'...
                'clear(''figpos'');',...
                'vabls.ContwindPixelPos=get(guiele.CONTWIND,''position'');',...
                'vabls.DisplayPanelPosition=get(guiele.DisplayPanel,''position'');',...                
                'set(guiele.CONTWIND,''Units'',old_units);',...
                'if ishandle(guiele.EnterPanelLL),',...  %These three objects get created later so the first time this runs, they don't exist.
                '   set(guiele.PolyEditPanel,''position'',[280 vabls.ContwindPixelPos(4)-505 250 210]);',...
                '   set(guiele.pdEnterPanel,''position'',[308 vabls.ContwindPixelPos(4)-550 306 420]);',...
                '   set(guiele.EnterPanelLL,''position'',[335 vabls.ContwindPixelPos(4)-540 306 485]);',...
                '   set(guiele.ResponsePlotPanel,''position'',[vabls.DisplayPanelPosition(3)-0.4646*vabls.DisplayPanelPosition(3)-3 vabls.DisplayPanelPosition(4)/2-1 0.4646*vabls.DisplayPanelPosition(3) (vabls.DisplayPanelPosition(4)-4)/2]);',...
                '   set(guiele.PoleZeroPanel,''position'',[vabls.DisplayPanelPosition(3)-0.4646*vabls.DisplayPanelPosition(3)-3 1 0.4646*vabls.DisplayPanelPosition(3) (vabls.DisplayPanelPosition(4)-4)/2]);',...
                'end;',...
                ];
            
eval(cnstn.placePanels);

guiele.BlockPanel=uipanel('parent',guiele.ControlPanel,'tag','guiele.BlockPanel','units','pixels',...   %Top left panel: contains the block diagram.
    'Background',LIGHTGREY,'title','Block Diagram',...
	'Position',[4 446 272 147]);

guiele.FractionsPanel=uipanel('parent',guiele.ControlPanel,'tag','guiele.FractionsPanel','Units','pixels',...   %Middle left panel: contains the transfer functions
	'Background',LIGHTGREY,'title','Transfer Functions',...
	'Position',[4 132 272 305]);

guiele.ButtonsPanel=uipanel('parent',guiele.ControlPanel,'tag','guiele.ButtonsPanel','units','pixels',...       %Bottom left panel: contains some buttons.
    'background',LIGHTGREY,'title','Buttons',...
    'position',[4 5 272 120]);

guiele.ResponsePlotPanel=uipanel('parent',guiele.DisplayPanel,'tag','guiele.ResponsePlotPanel','units','pixels','position',[vabls.DisplayPanelPosition(3)-0.4646*vabls.DisplayPanelPosition(3)-3 vabls.DisplayPanelPosition(4)/2-1 0.4646*vabls.DisplayPanelPosition(3) (vabls.DisplayPanelPosition(4)-4)/2],'background',LIGHTGREY);   %Top right panel: contains the response plots and the contour plots.

guiele.PoleZeroPanel=uipanel('parent',guiele.DisplayPanel,'tag','guiele.PoleZeroPanel','units','pixels','position',[vabls.DisplayPanelPosition(3)-0.4646*vabls.DisplayPanelPosition(3)-3 1 0.4646*vabls.DisplayPanelPosition(3) (vabls.DisplayPanelPosition(4)-4)/2],'background',LIGHTGREY);  %Bottom right panel: contains the pole zero plot.




%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
% The following section creates the figure that pops up when one of
% the blocks is pressed. The polynomials are entered on it.
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
guiele.PolyEditPanel=uipanel('units','pixels','bordertype','beveledout',...    
    'position',[328 285 250 210],'backgroundcolor',LIGHTGREY);

guiele.PolyEditPanel2=uipanel('parent',guiele.PolyEditPanel,'tag','guiele.PolyEditPanel2','units','pixels','position',[3 80 242 126],'background',LIGHTGREY);
 
%These two come up if G C or H is pressed
guiele.PolystringEditNum=uicontrol('parent',guiele.PolyEditPanel,'tag','guiele.PolystringEditNum','units','pixels',...  %Edit box for the numerator. 
    'style','edit','position',[58 166 163 27],'visible','off','keypressfcn','eval(cnstn.PolyEnterPress)');
guiele.PolystringEditDen=uicontrol('parent',guiele.PolyEditPanel,'tag','guiele.PolystringEditDen','units','pixels',...  %Edit box for the denomenator.
    'style','edit','position',[58 134 163 27],'visible','off','keypressfcn','eval(cnstn.PolyEnterPress)');

%this comes up if F is pressed
guiele.EditF=uicontrol('parent',guiele.PolyEditPanel,'tag','EditF','units','pixels','style','edit','position',[50 143 50 35],'visible','off','keypressfcn','eval(cnstn.PolyEnterPress)');   %Edit box for the Input Amplitude.

cnstn.PolyEnterPress=[...       %this is the key press fcn for the three edit boxes created above.                        
                        'if double(get(guiele.CONTWIND,''currentcharacter''))==13;',...
                        '   eval(get(guiele.PolyEnterButton,''callback''));',...
                        'end;',...
                        ];

%these three lines make the black line between the two edit boxes.
guiele.EditFractionAxis=axes('parent',guiele.PolyEditPanel,'tag','EditFractionAxis','units','normal','position',[0 0 1 1]); 
guiele.EditFraction=plot([.22 .90],[.78 .78],'linewidth',2,'tag','EditFraction','color',[0 0 0]);
set(guiele.EditFractionAxis,'xlim',[0 1],'ylim',[0 1],'visible','off')


%These get turned visible if their corresponding patch is pressed. They are
%turned off in "enter_callback".
guiele.InputLabelG=uicontrol('parent',guiele.PolyEditPanel,'tag','InputLabelG','style','text','units','pixels',...
    'position',[15 143 35 30],'fontsize',11,'Foreground',BLACK,'Background',LIGHTGREY,'string','G(s)=','visible','off');

guiele.InputLabelC=uicontrol('parent',guiele.PolyEditPanel,'tag','guiele.InputLabelC','style','text','units','pixels',...
    'position',[15 143 35 30],'fontsize',11,'Foreground',BLACK,'Background',LIGHTGREY,'string','C(s)=','visible','off');

guiele.InputLabelH=uicontrol('parent',guiele.PolyEditPanel,'tag','guiele.InputLabelH','style','text','units','pixels',...
    'position',[15 143 35 30],'fontsize',11,'Foreground',BLACK,'Background',LIGHTGREY,'string','H(s)=','visible','off');

guiele.InputLabelF=uicontrol('parent',guiele.PolyEditPanel,'tag','guiele.InputLabelF','style','text','units','pixels',...
    'position',[15 143 35 30],'fontsize',11,'Foreground',BLACK,'Background',LIGHTGREY,'string','F=','visible','off');


guiele.PolyEnterButton=uicontrol('parent',guiele.PolyEditPanel,'tag','PolyEnterButton','units','pixels','style','pushbutton',...
        'position',[20 95 100 24],'fontsize',10,'string','Enter','callback',[...
        'eval(cnstn.ButtonsEnable);',...    %while the polyenterpanel is visible everything else in guiele.CONTWIND is disabled
        'eval(cnstn.EnterButtonCallback),',...
        'set(guiele.PolyEditPanel,''visible'',''off''),',...
        ]);

guiele.PolyCancelButton=uicontrol('parent',guiele.PolyEditPanel,'tag','PolyCancelButton','units','pixels','style','pushbutton',...
    'position',[128 95 100 24],'fontsize',10,'string','Cancel','callback',[...      %This callback will just turn everything off and they can get turned back on when needed.
    '   eval(cnstn.ButtonsEnable);',...
    '   set(guiele.PolyEditPanel,''visible'',''off'');vabls.button_chooser=0;',...        
    '   set(guiele.PolystringEditNum,''visible'',''off'');',...
    '   set(guiele.PolystringEditDen,''visible'',''off'');',...
    '   set(guiele.EditF,''visible'',''off'');',...
    '   set(guiele.PolyEnterInstructions,''visible'',''off'');',...
    '   set(guiele.InstructionsF,''visible'',''off'');',...
    '   set(guiele.EditFraction,''visible'',''off'');',...
    '   set(guiele.InputLabelG,''visible'',''off'');',...
    '   set(guiele.InputLabelC,''visible'',''off'');',...
    '   set(guiele.InputLabelH,''visible'',''off'');',...
    '   set(guiele.InputLabelF,''visible'',''off'');',...    
    ]);

%guiele.PolyEnterInstructions is left on normally. If F is pressed then in
%"CallbackF" guiele.PolyEnterInstructions id turned off and
%guiele.InstructionsF is turned on. They are put back to normal in
%"enter_callback".
guiele.PolyEnterInstructions=text('tag','PolyEnterInstructions','units','normal','parent',guiele.EditFractionAxis,'position',[.5 .2],...
            'fontsize',10,'color',GREY,'edgecolor',GREY,'horizontalalignment','center','interpreter','tex',...
            'string',{' Enter coeficients of the polynomials ';'eg. for  s^3 + 3s - 7';'enter  1 0 3 -7'}); 
        
guiele.InstructionsF=text('tag','guiele.InstructionsF','units','normal','parent',guiele.EditFractionAxis,'position',[.5 .2],...
        'fontsize',10,'color',GREY,'edgecolor',GREY,'horizontalalignment','center','visible','off',...
        'string',' Input a scalar quantity ');        

        
set(guiele.PolyEditPanel,'visible','off');
% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


%this stuff draws the block diagram in the top left corner in
%guiele.BlockPanel
    figure(guiele.CONTWIND);,...
    guiele.BlockAxis= axes('tag','guiele.BlockAxis','units','normal','position',[0 0 1 1],'parent',guiele.BlockPanel);
    guiele.BlockImage=image(imread('BLOCKthin.bmp'),'tag','guiele.BlockImage');         %Block diagram in top right corner
    BlockAxisXlim=get(guiele.BlockAxis,'xlim');
    BlockAxisYlim=get(guiele.BlockAxis,'ylim');    
    set(guiele.BlockAxis,'visible','off');
    guiele.GPatch=patch([190 230 230 190],[51 51 11 11],[.83 .83 .92],'buttondownfcn','eval(cnstn.CallbackG)','tag','GPatch');
    guiele.CPatch=patch([109 149 149 109],[51 51 11 11],[1 1 .8],'buttondownfcn','eval(cnstn.CallbackC)','tag','CPatch');
    guiele.HPatch=patch([149 189 189 149],[124 124 84 84],[.7 .7 1],'parent',guiele.BlockAxis,'buttondownfcn','eval(cnstn.CallbackH)','tag','HPatch');
    guiele.FPatch=patch([21 61 61 21],[51 51 11 11],[.92 .67 .82],'buttondownfcn','eval(cnstn.CallbackF)','tag','FPatch');    
    set(guiele.BlockAxis,'xlim',BlockAxisXlim,'ylim',BlockAxisYlim);
    guiele.GText=text('tag','GText','units','normal','position',[.74 .765],'string','G(s)','buttondownfcn','eval(cnstn.CallbackG)'); 
    guiele.CText=text('tag','CText','units','normal','position',[.437 .765],'string','C(s)','buttondownfcn','eval(cnstn.CallbackC)');
    guiele.HText=text('tag','HText','units','normal','position',[.585 .22],'string','H(s)','buttondownfcn','eval(cnstn.CallbackH)');
    guiele.FText=text('tag','FText','units','normal','position',[.135 .765],'string','F','buttondownfcn','eval(cnstn.CallbackF)');
 


% These are the callbacks for the patches in the Block Panel and the
% fractions panel.
cnstn.CallbackG=[...
    'vabls.button_chooser=1;',...   %When Enter_callback runs, button chooser tells it which function it is creating
    'set(guiele.PolyEditPanel,''position'',[280 vabls.ContwindPixelPos(4)-445 250 210]);',...
    'set(guiele.PolyEditPanel,''visible'',''on'');',...   
    'set(guiele.PolystringEditNum,''visible'',''on'',''string'',num2str(vabls.Row1));',...    
    'set(guiele.PolystringEditDen,''visible'',''on'',''string'',num2str(vabls.Row2));',...    
    'set(guiele.EditFraction,''visible'',''on'');',...   
    'set(guiele.InputLabelG,''visible'',''on'');',...      %this gets turned off in "enter_callback.m".
    'set(guiele.PolyEnterInstructions,''visible'',''on'');',...
    'vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',... %This and the next 3 lines are all part of the DisableFigure function.
    '[vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.PolyEditPanel);',... %this call of DisableFigure disbles all the Patch callbacks and makes it so a mouse press outside of the guiele.PolyEditPanel highlights the Panel.
    'vabls.ButtonHandles=[hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    'vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...
    ];

cnstn.CallbackC=[...  
    'vabls.button_chooser=3;',...
    'set(guiele.PolyEditPanel,''position'',[280 vabls.ContwindPixelPos(4)-505 250 210]);',...
    'set(guiele.PolyEditPanel,''visible'',''on'');',...
    'set(guiele.PolystringEditNum,''visible'',''on'',''string'',num2str(vabls.Row3));',...
    'set(guiele.PolystringEditDen,''visible'',''on'',''string'',num2str(vabls.Row4));',...
    'set(guiele.EditFraction,''visible'',''on'');',...
    'set(guiele.InputLabelC,''visible'',''on'');',...      %this gets turned off in "enter_callback.m".
    'set(guiele.PolyEnterInstructions,''visible'',''on'');',...
    'vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',...
    '[vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.PolyEditPanel);',...
    'vabls.ButtonHandles=[hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    'vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...
    ];

cnstn.CallbackH=[...
    'vabls.button_chooser=5;',...
    'set(guiele.PolyEditPanel,''position'',[280 vabls.ContwindPixelPos(4)-565 250 210]);',...
    'set(guiele.PolyEditPanel,''visible'',''on'');',...
    'set(guiele.PolystringEditNum,''visible'',''on'',''string'',num2str(vabls.Row5));',...
    'set(guiele.PolystringEditDen,''visible'',''on'',''string'',num2str(vabls.Row6));',...    
    'set(guiele.EditFraction,''visible'',''on'');',...
    'set(guiele.InputLabelH,''visible'',''on'');',...      %this gets turned off in "enter_callback.m".
    'set(guiele.PolyEnterInstructions,''visible'',''on'');',...
    'vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',...
    '[vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.PolyEditPanel);',...
    'vabls.ButtonHandles=[hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    'vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...    
    ];

cnstn.CallbackF=[...
    'vabls.button_chooser=7;',...
    'set(guiele.PolystringEditNum,''visible'',''off'');',...
    'set(guiele.PolystringEditDen,''visible'',''off'');',...
    'set(guiele.PolyEnterInstructions,''visible'',''off'');',...    %turned back on in "enter_callback".
    'set(guiele.EditFraction,''visible'',''off'');',...
    'set(guiele.EditF,''visible'',''on'',''string'',num2str(vabls.Row7));',...   %This gets turned off in "enter_callback".
    'set(guiele.InputLabelF,''visible'',''on'');',...
    'set(guiele.InstructionsF,''visible'',''on'');',...
    'set(guiele.PolyEditPanel,''position'',[280 vabls.ContwindPixelPos(4)-400 250 210]);',...
    'set(guiele.PolyEditPanel,''visible'',''on'');',...      %This gets turned off in "enter_callback.m"
    'vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',...
    '[vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.PolyEditPanel);',...
    'vabls.ButtonHandles=[hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    'vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...     
    ];





% This is the callback for PolyEnterButton which is located on the PolyEditPanel. This calculates and 
%displays the closed loop transfer function and the poles and zeros.
  cnstn.EnterButtonCallback=[...
      'set(guiele.CONTWIND,''pointer'',''watch'');',...
      'drawnow,',...
      'if ishandle(PoleZeroAxis) delete(PoleZeroAxis);end;',...
      'if ishandle(guiele.ResponsePlotAxis) delete(guiele.ResponsePlotAxis),end,',...
      'guiele.ResponsePlotAxis=[];',...      %these two need to be given dummy values so the delete function works
      'enter_callback,',...
      'vabls.button_chooser=0;',...
      'vabls.G=tf(vabls.Row1,vabls.Row2);',...
      'vabls.G_c=tf(vabls.Row3,vabls.Row4);',...
      'vabls.H=tf(vabls.Row5,vabls.Row6);',...
      'vabls.otf=minreal(vabls.G*vabls.G_c);'...
      'vabls.lptf=minreal(vabls.G*vabls.G_c*vabls.H);'...
      'vabls.ctf=minreal(vabls.G*vabls.G_c/(1+vabls.G*vabls.G_c*vabls.H));'...
      '[num,den]=tfdata(vabls.ctf,''v'');'...   %num and den are the coeficient vectors of the closed loop TF.
      'vabls.ctf2=zpk(vabls.ctf);'...
      'zeroTF=(zero(vabls.ctf)'');',...       %These two need to be transposed for some reason. 
      'poleTF=(pole(vabls.ctf)'');',...
      '[nnum,mnum]=size(num);[nden,mden]=size(den);',...
      '[nzeroTF,dzeroTF]=size(zeroTF);[npoleTF,dpoleTF]=size(poleTF);',...
      'if ishandle(BackgroundAxis) delete(BackgroundAxis);end;',...       %Gets rid of all the text written by previous calculate commands
      'BackgroundAxis=axes(''tag'',''BackgroundAxis'',''parent'',guiele.DisplayPanel,''Units'',''Normal'',''Position'',[0 0 .529 1],''visible'',''off'');',...    
      'axis off,',...
      'figure(guiele.CONTWIND);',...
      'eval(cnstn.DisplayG);',...
      'PoleZeroAxis=axes(''parent'',guiele.PoleZeroPanel,''tag'',''PoleZeroAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...    %PoleZeroAxis is the axis in the bottom right corner of guiele.CONTWIND. Each time the Enter button is pressed the new poles and zeros and poles are plotted.
      'plot(real(zeroTF),imag(zeroTF),''o'',''markersize'',8), hold on, plot(real(poleTF),imag(poleTF),''x'',''markersize'',11), plot([0 0],get(PoleZeroAxis,''ylim''),''linestyle'','':'',''color'',[0 0 0]); guiele.RealAxis=plot(get(PoleZeroAxis,''xlim''),[0 0],''linestyle'','':'',''color'',[0 0 0]); hold off;',...
      'set(get(PoleZeroAxis,''xlabel''),''string'',''Real axis'',''fontsize'',8,''color'',[0 0 0]);',...
      'set(get(PoleZeroAxis,''ylabel''),''string'',''Imaginary axis'',''fontsize'',8,''color'',[0 0 0]);',...
      'set(get(PoleZeroAxis,''title''),''string'',''O = zero, X = pole'',''fontsize'',10,''color'',[0 0 0]);',...
      'set(PoleZeroAxis,''xcolor'',[0 0 0],''ycolor'',[0 0 0]);',...         
      'set(guiele.PrintFigButton,''visible'',''off'');',...
      'set(guiele.ResponsePrintFigButton,''visible'',''off'');',...
      'set(guiele.zoomzoom,''visible'',''off'');',...
      'set(guiele.zazoomzoomzoom,''visible'',''off'');',...
      'set(guiele.cursorPB,''visible'',''off'');',... 
      'set(guiele.PoleCursor,''visible'',''off'');',... 
      'set(guiele.CONTWIND,''pointer'',''arrow'');',...
      ];

%========================================================================
%========================================================================
  % All the stuff in this section is located within the FractionsPanel. The patches also
  % serve as buttons which enable guiele.PolyEnterPanel.

  figure(guiele.CONTWIND)
    guiele.FractionsAxis=axes('parent',guiele.FractionsPanel,'tag','guiele.FractionsAxis','units','normal',...
        'position',[0.015 0.1 0.96 0.8],'xlim',[.5 226.5],'ylim',[.5 232.5]);
    
    %these four are the patchs that the TFs sit on.
    guiele.patch_g=patch([6 225 225 6],[126.5 126.5 176.5 176.5],[.83 .83 .92],'tag','guiele.patch_g','edgecolor','none','buttondownfcn','eval(cnstn.CallbackG);');
    guiele.patch_c=patch([6 225 225 6],[62.5 62.5 113.5 113.5],[1 1 .8],'tag','guiele.patch_c','edgecolor','none','buttondownfcn','eval(cnstn.CallbackC)');
    guiele.patch_h=patch([6 225 225 6],[3.5 3.5 53.5 53.5],[.7 .7 1],'tag','guiele.patch_h','edgecolor','none','buttondownfcn','eval(cnstn.CallbackH)');
    guiele.patch_input=patch([100 140 140 100],[210.5 210.5 187.5 187.5],[.92 .67 .82],'tag','guiele.patch_input','edgecolor','none','buttondownfcn','eval(cnstn.CallbackF)');
    
    set(guiele.FractionsAxis,'visible','off');

 
% Strings that display the polynomials for the transfer functions. When enter is pressed, 
% the strings on these get changed in "enter_callback".
    guiele.text_g=text('tag','text_gnum','units','normal','fontsize',14,'horizontalalignment','center','position',[.5 .67],'interpreter','latex','string',poly2tex(vabls.Row1,vabls.Row2,'G(s)='),'buttondownfcn','eval(cnstn.CallbackG)');
    guiele.text_c=text('tag','text_cnum','units','normal','fontsize',14,'HorizontalAlignment','center','position',[.5 .385],'interpreter','latex','string',poly2tex(vabls.Row3,vabls.Row4,'C(s)='),'buttondownfcn','eval(cnstn.CallbackC)');
    guiele.text_h=text('tag','text_hnum','units','normal','fontsize',14,'horizontalalignment','center','position',[.5 .13],'interpreter','latex','string',poly2tex(vabls.Row5,vabls.Row6,'H(s)='),'buttondownfcn','eval(cnstn.CallbackH)');
    guiele.text_f=text('tag','guiele.text_f','units','normal','fontsize',10,'horizontalalignment','center','position',[.523 .86],'interpreter','latex','string',['$',num2str(vabls.Row7),'$'],'buttondownfcn','eval(cnstn.CallbackF)');
    
    
    guiele.FunctionInstructionsAxis=axes('parent',guiele.FractionsPanel,'tag','guiele.FunctionInstructionsAxis','position',[.05 .87 .9 .07],'visible','off');
    
    guiele.FunctionInstructions=text('tag','guiele.FunctionInstructions','units','normal','position',[.49 .58],...
        'fontsize',9,'color',GREY,'edgecolor',GREY,'horizontalalignment','center',...
        'string',' Click on blocks to change transfer functions ');

    guiele.fLabel=text('parent',guiele.FractionsAxis,'tag','guiele.flabel','units','normal','position',[.3 .86],...
        'interpreter','latex','string','$F=$','fontsize',12);
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

%This does no calculations because the calculations must be done before
%this can be pressed.
hPB( 3)=uicontrol( guiele.ButtonsPanel,'tag','calculate','Style','PushButton','Units','pixels',...
   'Position',[49 69 180 24],...
   'String','Display on Command Line','fontsize',10,'FontWeight','Demi',...
	'CallBack',[...
        'commandwindow,',...
        'set(guiele.CONTWIND,''pointer'',''watch'');',...
        'drawnow,',...
        'disp(''========================================================================================================'');',...
        'disp('' G=''),vabls.G,',...
        'disp(''========================================================================================================'');',...
        'disp('' C=''),vabls.G_c,',...
        'disp(''========================================================================================================'');',...
        'disp('' H=''),vabls.H,',...
        'disp(''========================================================================================================'');',...
  	    'disp('' G*C ==>open loop''),vabls.otf,'...
        'disp(''========================================================================================================'');',...
    	'disp('' G*C*H ==>loop''),vabls.lptf,'...
        'disp(''========================================================================================================'');',...
   	    'disp('' G*C/(1+G*C*H) ==> closed loop''),vabls.ctf,'...
        'disp(''========================================================================================================'');',...
        'disp('' system Coefficients are''),[num,den]=tfdata(vabls.ctf,''v''),'...
        'disp(''========================================================================================================'');',...
        'disp('' Closed Loop TF in zero/pole format''),vabls.ctf2,'...
        'disp(''========================================================================================================'');',...
        'disp('' System Zeros are''),zeroTF,',...
        'disp(''========================================================================================================'');',...
        'disp('' System Poles are''),poleTF,',...
        'disp(''========================================================================================================'');',...
        'disp(''========================================================================================================'');',...
        'disp(''========================================================================================================'');',... 
        'set(guiele.CONTWIND,''pointer'',''arrow'');',... 
        ]);
        

    
%=========================================================================
%============================Response Buttons=============================

%Some stuff for the zoom and cursor buttons
cnstn.iczoomin = imread('zoomin.jpg');
cnstn.iczoomout = imread('zoomout.jpg');
cnstn.iccursor = imread('cursor.jpg');
cnstn.ArrowCursor = imread('ArrowCursor.jpg');
cnstn.icfigure = imread('figureimage.jpg');
cnstn.zoominTt = 'Click and drag to zoom';
cnstn.zoomoutTt = 'Zoom Out';
cnstn.cursorTt = 'Enable Axes Cursor, click on Plot to see cursor values';
               
guiele.dcm = datacursormode(guiele.CONTWIND); %this may not be needed.

guiele.zoomzoom=uicontrol(guiele.ResponsePlotPanel,'Style','PushButton','Units','pixels','visible','off',...
	'Position',[10 6 cnstn.icwidth cnstn.icwidth],'Enable','on','CData',cnstn.iczoomin,'TooltipString',cnstn.zoominTt,...
    'CallBack','eval(cnstn.ZoomHousekeeping); set(guiele.CONTWIND,''PointerShapeCData'',cnstn.MagnifyingGlass); set(guiele.ResponsePlotAxis,''buttondownfcn'',''boxReady''); set(guiele.ResponsePlotLine,''buttondownfcn'',''boxReady''); set(guiele.zoomzoom,''Enable'',''off'');');

guiele.zazoomzoomzoom=uicontrol(guiele.ResponsePlotPanel,'Style','PushButton','Units','pixels','visible','off',...
	'Position',[10+1*cnstn.icwidth 6 cnstn.icwidth cnstn.icwidth],'Enable','off','CData',cnstn.iczoomout,'TooltipString',cnstn.zoomoutTt,...
    'CallBack','eval(cnstn.ZoomHousekeeping);eval(cnstn.Zoomout)');

cnstn.Zoomout=[...
    'set(guiele.ResponsePlotAxis,''xlim'',[min(min(vabls.ResponseXdata)) max(max(vabls.ResponseXdata))],''ylim'',[vabls.ResponseAxisYlim(1) vabls.ResponseAxisYlim(2)],''buttondownfcn'','''');',...     %the "min(min(real" is only needed for the contour Plot, but it has no affect on the Response Plot
    'set(guiele.zoomzoom,''Enable'',''on'');set(guiele.zazoomzoomzoom,''Enable'',''off'');',...
    'set(guiele.CONTWIND,''windowbuttonmotionfcn'','''',''pointer'',''arrow'');',...
    ];

cnstn.ZoomHousekeeping=[...
        'vabls.ResponseAxisMousePosition=get(guiele.ResponsePlotAxis,''currentpoint'');',...
        'vabls.ResponseAxisCurrentXlim=get(guiele.ResponsePlotAxis,''xlim'');',...    %these two are used in ZoomPointerControl
        'vabls.ResponseAxisCurrentYlim=get(guiele.ResponsePlotAxis,''ylim'');',...
        'set(guiele.CONTWIND,''windowbuttonmotionfcn'',''eval(cnstn.ZoomPointerControl)'');',...   %this needs to be reset to '' later.
        ];
    
 cnstn.ZoomPointerControl=[...      %this mekes the pointer turn into the custom when it is over the axis and into an arrow when it is outside the axis.
     'vabls.ResponseAxisMousePos=get(guiele.ResponsePlotAxis,''currentpoint'');',...
     'if ((vabls.ResponseAxisMousePos(1) < vabls.ResponseAxisCurrentXlim(1)) | (vabls.ResponseAxisMousePos(1) > vabls.ResponseAxisCurrentXlim(2)) | (vabls.ResponseAxisMousePos(1,2) < vabls.ResponseAxisCurrentYlim(1)) | (vabls.ResponseAxisMousePos(1,2) > vabls.ResponseAxisCurrentYlim(2)));',...
     '  if isequal(get(guiele.CONTWIND,''pointer''),''custom'');',...   %check if pointer is already an arrow.
     '          set(guiele.CONTWIND,''pointer'',''arrow'');drawnow;',...
     '  end;',...
     'else;',...
     '  if isequal(get(guiele.CONTWIND,''pointer''),''arrow'');',...    %check if pointer is already custom.
     '          set(guiele.CONTWIND,''pointer'',''custom'');drawnow;',...
     '      end;',...
     'end;',...
     ];
     
%==========================================================================
%==========================================================================
%This section concerns the  PD and Lead Lag Root Contour option in the 
%Controller design menu

%PD Stuff
guiele.pdEnterPanel=uipanel(guiele.CONTWIND,'tag','guiele.pdEnterPanel','units','pixels','position',[308 vabls.ContwindPixelPos(4)-550 306 420],'visible','off',...
        'bordertype','beveledout','backgroundcolor',cnstn.LIGHTGREY,'buttondownfcn','HoverBox(guiele.CONTWIND,guiele.pdEnterPanel,gcbo)');

guiele.pdEnterPanelText=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdEnterPanelText','style','text','units','normal','position',[0 0 1 1],'backgroundcolor',cnstn.LIGHTGREY);

guiele.pdBar=uicontrol('parent',guiele.pdEnterPanel,'style','text','units','pixels','position',[3 396 300 21],'backgroundcolor',[.8 .8 1],'enable','off','buttondownfcn','HoverBox(guiele.CONTWIND,guiele.pdEnterPanel,gcbo)');

guiele.pdEditPanel=uipanel('parent',guiele.pdEnterPanel,'tag','guiele.pdEditPanel','units','pixels','backgroundcolor',cnstn.LIGHTGREY,...
    'BorderType','etchedin','position',[3 40 298 158],'title','Derivative Controler Values');

guiele.pdInstructionsPanel=uipanel('parent',guiele.pdEnterPanel,'tag','guiele.pdInstructionsPanel','units','pixels','backgroundcolor',cnstn.LIGHTGREY,...
    'BorderType','etchedin','position',[3 215 298 177],'title','PD Controller Design Tool');

cnstn.pdInstructionsString={'This is a tool for the design of a PD controler. The';...
                          'Transfer function for the controller will be equal to';...
                          '';...
                          'C*(Kd*s+Kp)';... 
                          '';...
                          'Where C is the constant entered in the C(S)= ... box';...
                          'on the left of the main window, Kp=1, and Kd varies';... 
                          'from 0 to the user specified maximum. As Kd varies, the';...
                          'Poles of the resulting closed loop transfer functions';...
                          'will be plotted.';...
                          'Note that Kdmin must be greater than 0.';...
                          };

guiele.pdInstructions=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdInstructions','style','text','units','pixels','position',[15 215 270 155],...
    'horizontalalignment','left','backgroundcolor',cnstn.LIGHTGREY,'fontsize',8,'string',cnstn.pdInstructionsString);

guiele.pdMinEdit=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdMinEdit','style','edit','position',[23 145 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.pdEnterPress);');
guiele.pdMaxEdit=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdMaxEdit','style','edit','position',[23 104 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.pdEnterPress);');
guiele.pdStepsEdit=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdMaxEdit','style','edit','position',[23 63 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.pdEnterPress);');

cnstn.pdEnterPress=[...     %this is the keypress fcn for the three edit boxes created above.
                    'if double(get(guiele.CONTWIND,''currentcharacter'')) == 13;',... %check if enter is the last key pressed.
                    '   eval(get(guiele.pdEnter,''callback''));',...
                    'end;',...
                    ];
                    
guiele.pdMinLabel=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdMinLabel','style','text','position',[23 167 50 12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','Kd Min:');
guiele.pdMaxLabel=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdMaxLabel','style','text','position',[23 126 50 12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','Kd Max:');
guiele.pdStepsLabel=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdStepSizeLabel','style','text','position',[23 85 150  12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','Number of Steps:');

guiele.pdEnter=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdEnter','units','pixels','style','pushbutton','position',[12 8 135 cnstn.bheight],...
    'string','Enter','callback',' drawnow; set(guiele.CONTWIND,''pointer'',''watch''), eval(cnstn.ButtonsEnable); vabls.pdllChooser=1; eval(cnstn.RootContourEnterCallback);set(guiele.pdEnterPanel,''visible'',''off''), vabls.ParameterLabel=''Kd =''; set(guiele.CONTWIND,''pointer'',''arrow'')');

cnstn.RootContourEnterCallback=[...
    'if ishandle(guiele.ResponsePlotAxis), delete(guiele.ResponsePlotAxis), end;',...
    'guiele.ResponsePlotAxis=axes(''parent'',guiele.ResponsePlotPanel,''tag'',''ResponsePlotAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...
    'axes(guiele.ResponsePlotAxis), plot(real(zeroTF),imag(zeroTF),''o'',''markersize'',8), hold on, plot(real(poleTF),imag(poleTF),''x'',''markersize'',11);',...  %zeroTF and poleTF are created in cnstn.EnterButtonCallback
    'set(get(guiele.ResponsePlotAxis,''xlabel''),''string'',''Real axis'',''fontsize'',8,''color'',[0 0 0]);',...
    'set(get(guiele.ResponsePlotAxis,''ylabel''),''string'',''Imaginary axis'',''fontsize'',8,''color'',[0 0 0]);',...
    'set(get(guiele.ResponsePlotAxis,''title''),''string'',''O = zero, X = pole'',''fontsize'',10,''color'',[0 0 0]);',...
    'ContourPlot;',...
    'eval(cnstn.ResponsePlotHousekeeping);',...
    ];
   
guiele.pdCancel=uicontrol('parent',guiele.pdEnterPanel,'tag','guiele.pdCancel','units','pixels','style','pushbutton','position',[154 8 135 cnstn.bheight],...
    'string','Cancel','callback','eval(cnstn.ButtonsEnable); set(guiele.pdEnterPanel,''visible'',''off'')');


%Lead Lag Stuff
guiele.EnterPanelLL=uipanel('parent',guiele.CONTWIND,'tag','guiele.EnterPanelLL','units','pixels','position',[335 vabls.ContwindPixelPos(4)-540 306 485],'visible','off',...
    'bordertype','beveledout','backgroundcolor',cnstn.LIGHTGREY);

guiele.EnterPanelTextLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.EnterPanelTextLL','style','text','units','normal','position',[0 0 1 1],'backgroundcolor',cnstn.LIGHTGREY,...
    'buttondownfcn','HoverBox(guiele.CONTWIND,guiele.EnterPanelLL,gcbo),');

guiele.BarLL=uicontrol('parent',guiele.EnterPanelLL,'style','text','units','pixels','position',[3 461 300 21],'backgroundcolor',[.8 .8 1],'enable','off','buttondownfcn','HoverBox(guiele.CONTWIND,guiele.EnterPanelLL,gcbo)');

guiele.EditPanelLL=uipanel('parent',guiele.EnterPanelLL,'tag','guiele.EditPanelLL','units','pixels','backgroundcolor',cnstn.LIGHTGREY,...
    'BorderType','etchedin','position',[3 40 298 195],'title','Lead Lag Controler Values');

guiele.InstructionsPanelLL=uipanel('parent',guiele.EnterPanelLL,'tag','guiele.InstructionsPanelLL','units','pixels','backgroundcolor',cnstn.LIGHTGREY,...
    'BorderType','etchedin','position',[3 256 298 201],'title','Lead Lag Controller Design Tool');

cnstn.InstructionsStringLL={...
    'This is a tool for the design of a Phase-Lead or';...
    'Phase-Lag controller. The transfer function for';...
    'the controller takes the form:';...
    '';...
    'C*(a*T*s+1) / (T*s+1)';...
    '';...
    'C is a constant which is entered in the C(s)=  box in';...
    'the transfer function input panel on the left of the';...
    'Acsys Template window; a is entered in the edit box';...
    'below; T will vary between the max and min values';...
    'specified below. For each value of the varying';...
    'parameter T the poles of the resulting closed loop';...
    'transfer function will be plotted.';...
    'Note that Tmin must be greater than 0.';...
    };

guiele.InstructionsLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.InstructionsLL','style','text','units','pixels','position',[15 250 270 183],...
    'horizontalalignment','left','backgroundcolor',cnstn.LIGHTGREY,'fontsize',8,'string',cnstn.InstructionsStringLL);

guiele.aEditLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.aEditLL','style','edit','position',[23 176 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.EnterPressLL),');
guiele.MinEditLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.MinEditLL','style','edit','position',[23 135 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.EnterPressLL),');    
guiele.MaxEditLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.MaxEditLL','style','edit','position',[23 94 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.EnterPressLL),');
guiele.StepsEditLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.StepsEditLL','style','edit','position',[23 53 259 19],'horizontalalignment','left','keypressfcn','eval(cnstn.EnterPressLL),');    
    
cnstn.EnterPressLL=[...     %this is the keypress fcn for the 4 edit boxes created above.
                    'if double(get(guiele.CONTWIND,''currentcharacter'')) == 13;',...
                    '   eval(get(guiele.EnterLL,''callback''));',...
                    'end,',...
                    ];

guiele.aLabelLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.aLabelLL','style','text','position',[23 198 50 12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','a:');
guiele.MinLabelLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.MinLabelLL','style','text','position',[23 157 50 12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','T Min:');
guiele.MaxLabelLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.MaxLabelLL','style','text','position',[23 116 50 12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','T Max:');
guiele.StepsLabelLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.StepSizeLabelLL','style','text','position',[23 75 150  12],'background',cnstn.LIGHTGREY,...
    'horizontalalignment','left','fontsize',8,'string','Number of Steps:');


guiele.EnterLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.EnterLL','style','pushbutton','units','pixels','string','Enter',...
    'position',[12 8 135 cnstn.bheight],'callback','set(guiele.CONTWIND,''pointer'',''watch''), drawnow; eval(cnstn.ButtonsEnable); vabls.pdllChooser=2; eval(cnstn.RootContourEnterCallback);set(guiele.EnterPanelLL,''visible'',''off''); vabls.ParameterLabel=''T =''; set(guiele.CONTWIND,''pointer'',''arrow'')');

guiele.CancelLL=uicontrol('parent',guiele.EnterPanelLL,'tag','guiele.CancelLL','units','pixels','style','pushbutton','position',[154 8 135 cnstn.bheight],...
    'string','Cancel','callback','eval(cnstn.ButtonsEnable); set(guiele.EnterPanelLL,''visible'',''off'')');

%Root Contour Pole Cursor stuff
guiele.PoleCursor=uicontrol(guiele.ResponsePlotPanel,'tag','guiele.PoleCursor','Style','PushButton','Units','pixels','visible','off',...
	'Position',[10+2*cnstn.icwidth 6 cnstn.icwidth cnstn.icwidth],'Enable','on','CData',cnstn.ArrowCursor,'tooltipstring','Scroll through parameter values with arrow buttons','callback',[...
    'if ishandle(guiele.PoleCursorDot), delete(guiele.PoleCursorDot),end,',...
    'vabls.PoleCursorPos=1;',...
    'guiele.PoleCursorDot=line(''parent'',guiele.ResponsePlotAxis,''xdata'',real(vabls.ContourPoles(:,vabls.PoleCursorPos)),''ydata'',imag(vabls.ContourPoles(:,vabls.PoleCursorPos)),''linestyle'',''none'',''Marker'',''s'',''MarkerFaceColor'',''r'',''MarkerEdgeColor'',''k'',''MarkerSize'',4);',...
    'set(guiele.CONTWIND,''keypressfcn'',''PoleCursorCallback,'');',...
    'set(guiele.PoleCursor,''keypressfcn'',''PoleCursorCallback,'');',...
    'set(guiele.PoleCursorWindow,''visible'',''on'');',...
    'set(guiele.PoleCursorTxt,''String'',strvcat([vabls.ParameterLabel '' '' num2str(vabls.kValues(vabls.PoleCursorPos))]));',...   %vabls.ParameterLabel gets set by the pd and LL enter buttons
    'set(guiele.PoleListText,''string'',{''Current Poles Are:  '' num2str(vabls.ContourPoles(:,vabls.PoleCursorPos))});',...
    'set(guiele.PoleCursorWindow,''position'',[.345*vabls.DisplayPanelPosition(3) .7*vabls.DisplayPanelPosition(4) 180 168]);',...
    ]);

    guiele.PoleCursorWindow = uipanel('parent',guiele.DisplayPanel,'Units','pixels','Position',[.345*vabls.DisplayPanelPosition(3) .7*vabls.DisplayPanelPosition(4) 180 168],'BackGroundColor',LIGHTGREY,'BorderType','beveledout','ButtonDownFcn','','Visible','off');
    guiele.PoleCursorTxt = uicontrol('Parent',guiele.PoleCursorWindow,'tag','guiele.PoleCursorTxt','Style','text','Units','Normalized','FontSize',6,'Position',[0 0 1 0.914],'fontsize',10,'FontWeight','Demi','BackgroundColor',CYAN);
    guiele.PoleListText = uicontrol('parent',guiele.PoleCursorWindow,'tag','guiele.PoleListText','style','text','units','normal','position',[0 0 1 .786],'fontsize',8,'backgroundcolor',CYAN);
    guiele.PoleCursorWindowBar = uicontrol('Parent',guiele.PoleCursorWindow,'Style','text','Units','Normalized','Enable','off','Position',[0 0.914 1 0.086],'BackGroundColor',LIGHTGREY,'String','Cursor Values','ButtonDownFcn','HoverBox(guiele.CONTWIND,guiele.PoleCursorWindow,gcbo)');
    uicontrol('Parent',guiele.PoleCursorWindow,'Units','Normalized','Style','PushButton','String','X','Position',[0.9 0.914 0.09 0.086],'Callback','set(guiele.PoleCursorWindow,''visible'',''off''); set(guiele.PoleCursorDot,''Marker'',''none''); set(guiele.CONTWIND,''keypressfcn'','''')');

%==========================================================================    
%==========================================================================    

%this is the cursor for the ResponsePlotAxis
guiele.cursorPB=uicontrol(guiele.ResponsePlotPanel,'tag','guiele.cursorPB','Style','PushButton','Units','pixels','visible','off',...
	'Position',[10+2*cnstn.icwidth 6 cnstn.icwidth cnstn.icwidth],'Enable','on','CData',cnstn.iccursor,'TooltipString',cnstn.cursorTt,...
    'CallBack','set(guiele.CONTWIND,''pointershapecdata'',cnstn.dataCursor,''windowbuttonmotionfcn'',''eval(cnstn.ZoomPointerControl)''); set(guiele.zoomzoom,''enable'',''on''); set(guiele.ResponsePlotAxis,''buttondownfcn'',''CursorBar'')'); 

guiele.PrintFigButton=uicontrol(guiele.ResponsePlotPanel,'tag','guiele.PrintFigButton','units','pixels','visible','off',...     %This button is visible when a contour plot is present on the Response Axis. When a time response is plotted it is guiele.ResponsePrintFigButton that is visible.
    'style','pushbutton','cdata',cnstn.icfigure,'position',[10+3*cnstn.icwidth 6 cnstn.icwidth cnstn.icwidth],...
    'tooltipstring','Print to Figure','fontsize',8,'callback','figure;guiele.ResponseAxisCopy=copyobj(guiele.ResponsePlotAxis,gcf);set(guiele.ResponseAxisCopy,''deletefcn'','''')');

clear iczoomin iczoomout iccursor;

TimeResponseMenu=uimenu(guiele.CONTWIND,'label','Time Response');

StepResponse=uimenu(TimeResponseMenu,'label','Step','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch'');',...
    'drawnow;',...
    'if ishandle(guiele.ResponsePlotAxis) delete(guiele.ResponsePlotAxis),end,',...
    'guiele.ResponsePlotAxis=axes(''parent'',guiele.ResponsePlotPanel,''tag'',''ResponsePlotAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...   %this gets deleted in the Calculate button callback
    '[vabls.ResponseYdata vabls.ResponseXdata] = step(vabls.Row7*vabls.ctf);',...       
    'guiele.ResponsePlotLine=plot(vabls.ResponseXdata,vabls.ResponseYdata);',...
    'xlabel(''    Time (s)'');ylabel(''Amplitude'');',...
    'set(get(guiele.ResponsePlotAxis,''title''),''string'',''Closed-Loop Step Response'',''color'',[0 0 0]),',...
    'cnstn.ResponsePrint=[''guiele.StepResponseFigure=figure; step(vabls.Row7*vabls.ctf)''];',...   %cnstn.ResponsePrint is the callback for guiele.ResponsePrintFigButton. It does the calculations again because matlab puts some special functionality into the plot it generates.
    'eval(cnstn.ResponsePlotHousekeeping);',...  
    ]);



ImpulseResponse=uimenu(TimeResponseMenu,'label','Impulse','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch'');',...
    'drawnow;',...
    'if ishandle(guiele.ResponsePlotAxis) delete(guiele.ResponsePlotAxis),end,',...
    'guiele.ResponsePlotAxis=axes(''parent'',guiele.ResponsePlotPanel,''tag'',''ResponsePlotAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...   %this gets deleted in the Calculate button callback
    '[vabls.ResponseYdata vabls.ResponseXdata] = impulse(vabls.Row7*vabls.ctf);',...
    'guiele.ResponsePlotLine=plot(vabls.ResponseXdata,vabls.ResponseYdata);',...    
    'xlabel(''    Time (s)'');ylabel(''Amplitude'');',...
    'set(get(guiele.ResponsePlotAxis,''title''),''string'',''Closed-Loop Impulse Response'',''color'',[0 0 0]),',...
    'cnstn.ResponsePrint=[''guiele.ImpulseResponseFigure=figure; impulse(vabls.Row7*vabls.ctf);''];',...    %cnstn.ResponsePrint is the callback for guiele.ResponsePrintFigButton. It does the calculations again because matlab puts some special functionality into the plot it generates.
    'eval(cnstn.ResponsePlotHousekeeping);',...    
    ]);

RampResponse=uimenu(TimeResponseMenu,'label','Ramp','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch'');',...
    'drawnow;',...
    'if ishandle(guiele.ResponsePlotAxis) delete(guiele.ResponsePlotAxis),end,',...
    'guiele.ResponsePlotAxis=axes(''parent'',guiele.ResponsePlotPanel,''tag'',''ResponsePlotAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...   %this gets deleted in the Calculate button callback
    'vabls.Gin=tf([1],[1 0]);[vabls.ResponseYdata vabls.ResponseXdata] = step(tf(vabls.Row7*vabls.ctf*vabls.Gin));',...
    'guiele.ResponsePlotLine=plot(vabls.ResponseXdata,vabls.ResponseYdata);',...    
    'xlabel(''    Time (s)'');ylabel(''Amplitude'');',...
    'set(get(guiele.ResponsePlotAxis,''title''),''string'',''Closed-Loop Ramp Response'',''color'',[0 0 0]),',...
    'cnstn.ResponsePrint=[''guiele.RampResponseFig=figure; vabls.Gin=tf([1],[1 0]),step(tf(vabls.Row7*vabls.ctf*vabls.Gin));''];',...   %cnstn.ResponsePrint is the callback for guiele.ResponsePrintFigButton. It does the calculations again because matlab puts some special functionality into the plot it generates.
    'eval(cnstn.ResponsePlotHousekeeping);',... 
    ]);
    
ParabolicReponse=uimenu(TimeResponseMenu,'label','Parabolic','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch'');',...
    'drawnow;',...
    'if ishandle(guiele.ResponsePlotAxis) delete(guiele.ResponsePlotAxis),end,',...
    'guiele.ResponsePlotAxis=axes(''parent'',guiele.ResponsePlotPanel,''tag'',''ResponsePlotAxis'',''units'',''normal'',''position'',[0.1267 0.1600 0.8183 0.7217]);',...   %this gets deleted in the Calculate button callback
    'vabls.Gin=tf([1],[1 0 0]);[vabls.ResponseYdata vabls.ResponseXdata] = step(tf(vabls.Row7*vabls.ctf*vabls.Gin));',...
    'guiele.ResponsePlotLine=plot(vabls.ResponseXdata,vabls.ResponseYdata);',...   
    'xlabel(''    Time (s)'');ylabel(''Amplitude'');',...   
    'set(get(guiele.ResponsePlotAxis,''title''),''string'',''Closed-Loop Parabolic Response'',''color'',[0 0 0]),',...
    'cnstn.ResponsePrint=[''guiele.ParabolicResponseFig=figure; vabls.Gin=tf([1],[1 0 0]); step(tf(vabls.Row7*vabls.ctf*vabls.Gin))''];',...    %cnstn.ResponsePrint is the callback for guiele.ResponsePrintFigButton. It does the calculations again because matlab puts some special functionality into the plot it generates.
    'eval(cnstn.ResponsePlotHousekeeping);',... 
    ]);

 cnstn.ResponsePlotHousekeeping=[...
    'set(guiele.ResponsePlotAxis,''xcolor'',[0 0 0],''ycolor'',[0 0 0],''deletefcn'',''eval(cnstn.ResponseAxisDeleteFcn)'',''xlimmode'',''manual'',''ylimmode'',''manual'');',...
    'set(guiele.zoomzoom,''visible'',''on'',''enable'',''on'');',...
    'set(guiele.zazoomzoomzoom,''visible'',''on'',''enable'',''off'');',...
    'if ishandle(guiele.ResponsePlotAxis);',...
    '   if isequal(get(get(guiele.ResponsePlotAxis,''xlabel''),''string''),''    Time (s)'');',...      %this if statment checks if the plot on the Response axis is a contour plot or a Time Response Plot
    '       set(guiele.cursorPB,''visible'',''on'');',...
    '       set(guiele.PoleCursor,''visible'',''off'');',...  
    '       set(guiele.PrintFigButton,''visible'',''off'');',...
    '       set(guiele.ResponsePrintFigButton,''visible'',''on'');',...
    '   elseif isequal(get(get(guiele.ResponsePlotAxis,''xlabel''),''string''),''Real axis'');',...
    '       set(guiele.cursorPB,''visible'',''off'');',...
    '       set(guiele.PoleCursor,''visible'',''on'');',...
    '       set(guiele.PrintFigButton,''visible'',''on'');',...  
    '       set(guiele.ResponsePrintFigButton,''visible'',''off'');',...
    '   end;',...
    'end,',...
    'vabls.ResponseAxisYlim=get(guiele.ResponsePlotAxis,''ylim'');',...      $This is used by the zoomout fcn to reset the axis limits
    'vabls.ResponseAxisCurrentXlim=get(guiele.ResponsePlotAxis,''xlim'');',...    %these two are used by the Zoompointer control they are also updated by the zoom commands
    'vabls.ResponseAxisCurrentYlim=get(guiele.ResponsePlotAxis,''ylim'');',...
    'set(guiele.CONTWIND,''pointer'',''arrow'');',...  
     ];   
    
guiele.ResponsePrintFigButton=uicontrol(guiele.ResponsePlotPanel,'tag','guiele.ResponsePrintFigButton','units','pixels','visible','off',...     %this button is visible whenever a Time Response has been plotted to the Response Axis. When a cpntour plot is present it is Guiele.PrintFigButton that is visible.
    'style','pushbutton','cdata',cnstn.icfigure,'position',[10+3*cnstn.icwidth 6 cnstn.icwidth cnstn.icwidth],...
    'tooltipstring','Print to Figure','fontsize',8,'callback','eval(cnstn.ResponsePrint)');  %cnstn.ResponsePrint is set by the individual Response Plot menu items


cnstn.ResponseAxisDeleteFcn = 'set(guiele.CONTWIND,''windowbuttonmotionfcn'','''');if ishandle(guiele.CursorWindow),delete(guiele.CursorWindow);guiele.CursorWindow=-1;end, try, set(guiele.PoleCursorWindow,''visible'',''off''); end; set(guiele.CONTWIND,''keypressfcn'','''');';

guiele.OtherInputs=uimenu(TimeResponseMenu,'label','Other Inputs','callback',[...
     'cnstn.ResponsePrint=[''guiele.OtherInputsFig=figure; lsim(vabls.ctf,vabls.numinput,vabls.tset)'']; GETLSIM2']);
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


FrequencyResponseMenu=uimenu(guiele.CONTWIND,'label','Frequency Response');

clMagPhase=uimenu(FrequencyResponseMenu,'label','Closed Loop Mag.-Phase','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch''); drawnow;',...
    'clFig=figure(''Units'',''Normal'',''Name'',''Closed-loop Magnitude and Phase Plots'',''position'',[0.2375 0.055 0.75 0.79]);',...
	'[mag,phase,freq]=bode(vabls.ctf);for ii=1:size(freq),MAG(ii)=mag(:,:,ii);PHASE(ii)=phase(:,:,ii);end,',...
    'maxMAG=max(MAG);for ii=1:size(freq)-1,if maxMAG==MAG(ii),freqmax=freq(ii);end,end,',...
    'subplot(2,1,1),plot(freq,MAG),xlabel(''Frequency (rad/s)''),ylabel(''Magnitude''),',...
    'title(''Closed-loop Magnitude plot''),',...
    'text(0.7*max(freq),maxMAG-.25*maxMAG,{'' Peak Magnitude:'',num2str(maxMAG),''@ Frequency:'',num2str(freqmax)}),',...
    'subplot(2,1,2),plot(freq,PHASE),xlabel(''Frequency (rad/s)''),ylabel(''Phase (Deg)''),',...
    'title(''Closed-loop Phase plot'');',...
    'set(guiele.CONTWIND,''pointer'',''arrow'');';...
    ]);

dbMagPhase=uimenu(FrequencyResponseMenu,'label','Mag.-Phase (DB)','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch''); drawnow;',...
    'dbFig=figure(''Units'',''Normal'',''Name'',''Bode Plot'',''position'',[0.2375 0.045 0.75 0.79]);',...
    'bode(vabls.ctf),title(''Closed-loop Frequency Plots'');',...
    'set(guiele.CONTWIND,''pointer'',''arrow'');';...
    ]);

PhaseGainMargin=uimenu(FrequencyResponseMenu,'label','Phase and Gain Margin','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch''); drawnow;',...
    'PhaseFig=figure(''Units'',''Normal'',''Name'',''Phase and Gain Margin (Loop TF)'',''position'',[0.2375 0.035 0.75 0.79]);',...
	'margin(vabls.lptf),title(''Phase and Gain Margin'');',...
    'set(guiele.CONTWIND,''pointer'',''arrow'');';...
    ]);

OpenLoopNyquist=uimenu(FrequencyResponseMenu,'label','Open Loop Nyquist','callback',[...
    'set(guiele.CONTWIND,''pointer'',''watch''); drawnow;',...
    'OpenLoopFig=figure(''Units'',''Normal'',''Name'',''Nyquist Plot- Complete Polar plot (Loop TF)'',''position'',[0.2375 0.025 0.75 0.79]);',...
	'nyquist(vabls.lptf),title(''Loop Nyquist Plot'');',...
    'set(guiele.CONTWIND,''pointer'',''arrow'');';...
    ]);




guiele.ControllerDesignToolMenu=uimenu(guiele.CONTWIND,'tag','guiele.ControllerDesignToolMenu','label','Controller Design Tool');

guiele.RootLocus=uimenu(guiele.ControllerDesignToolMenu,'tag','guiele.RootLocus','label','Root Locus','callback',[...
    'rltool(vabls.lptf)']);

guiele.Bode=uimenu(guiele.ControllerDesignToolMenu,'tag','guiele.Bode','label','Bode','callback',[...
    'sisotool(''bode'',vabls.lptf)']);

guiele.pdRootContour=uimenu(guiele.ControllerDesignToolMenu,'tag','guiele.pdRootContour','label','PD Design: Root Contour','callback',[...
    'if (length(vabls.Row3)~=1 | length(vabls.Row4)~=1);',...
    '   guiele.ErrorFig1=errordlg(''Warning: Root Contour Tool requires that C(s) be a scaler quantity.'');',...
    '   set(guiele.ErrorFig1,''windowstyle'',''modal'');',...
    'else;',...
    '   set(guiele.pdEnterPanel,''visible'',''on'');',...
    '   set(guiele.pdEnterPanel,''position'',[308 vabls.ContwindPixelPos(4)-550 306 420]);',...
    '   vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',...
    '   [vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.pdEnterPanel);',...
    '   vabls.ButtonHandles=[guiele.PolyEnterButton,guiele.PolyCancelButton,hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    '   vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...
    'end;',...
    ]);

guiele.LeadLagRootContour=uimenu(guiele.ControllerDesignToolMenu,'tag','guiele.LeadLagRootContour','Label','Lead Lag Design: Root Contour','callback',[...
    'if (length(vabls.Row3)~=1 | length(vabls.Row4)~=1);',...
    '   guiele.ErrorFig1=errordlg(''Warning: Root Contour Tool requires that C(s) be a scaler quantity.'');',...
    '   set(guiele.ErrorFig1,''windowstyle'',''modal'');',...
    'else;',...
    '   set(guiele.EnterPanelLL,''visible'',''on'');',...
    '   set(guiele.EnterPanelLL,''position'',[335 vabls.ContwindPixelPos(4)-540 306 485]);',...
    '   vabls.PatchHandles=[guiele.patch_g,guiele.patch_c,guiele.patch_h,guiele.patch_input,guiele.text_g,guiele.text_c,guiele.text_h,guiele.text_f,guiele.GPatch,guiele.CPatch,guiele.HPatch,guiele.FPatch,guiele.GText,guiele.CText,guiele.HText,guiele.FText];',...
    '   [vabls.PatchFunctions vabls.WindowFunctionA vabls.WindowFunctionB]=DisableFigure(vabls.PatchHandles,''buttondownfcn'','''',guiele.CONTWIND,guiele.EnterPanelLL);',...
    '   vabls.ButtonHandles=[guiele.PolyEnterButton,guiele.PolyCancelButton,hPB( 3),guiele.ResetButton,guiele.CloseWindowButton,guiele.cursorPB,guiele.PoleCursor,guiele.PrintFigButton,guiele.ResponsePrintFigButton,guiele.zoomzoom,guiele.zazoomzoomzoom,TimeResponseMenu,FrequencyResponseMenu,guiele.ControllerDesignToolMenu,guiele.h_MN(01),guiele.h_MN(02),guiele.h_MN(03)];',...
    '   vabls.ButtonEnables=DisableFigure(vabls.ButtonHandles,''enable'',''off'');',...
    'end;',...
    ]);



cnstn.ButtonsEnable=[...    %this is called by the enter and cancel buttons on various panels to un-freeze everything that was frozen by the DisableFigure function
    'set(vabls.PatchHandles,{''buttondownfcn''},vabls.PatchFunctions);',...
    'set(vabls.ButtonHandles,{''enable''},vabls.ButtonEnables);',...
    'set(guiele.CONTWIND,''windowbuttondownfcn'',vabls.WindowFunctionA);',...
    'set(guiele.CONTWIND,''windowbuttonupfcn'',vabls.WindowFunctionB);',...    
    ];
    
    
guiele.ResetButton=uicontrol( guiele.ButtonsPanel,'tag','ResetButton','Style','PushButton','Units','pixels',...
	'Position',[49 38 181 24],...
	'String','Reset','fontsize',10,'FontWeight','Demi','Callback','eval(get(gcf,''closerequestfcn'')); Controls');

guiele.CloseWindowButton=uicontrol( guiele.ButtonsPanel,'tag','CloseWindowButton','Style','PushButton','Units','pixels',...
	'Position',[49 7 181 24],...
	'String','Close Window','fontsize',10,'FontWeight','Demi','Callback','eval(get(gcf,''closerequestfcn''))');

%===================================================================
% Create UIMENUS
%===================================================================
guiele.h_MN(01)=uimenu(guiele.CONTWIND,'Label','&Calculator','callback','!calc.exe;');
guiele.h_MN(02)=uimenu(guiele.CONTWIND,'Label','&Unit Conversion','CallBack','Conver');
guiele.h_MN(03)=uimenu(guiele.CONTWIND,'Label','&Help','CallBack','controls_hlp');

cnstn.DisplayG=['text(''position'',[0.3*BOX1_W*1.890 19.3*BOX1_H],''unit'',''normal'',',...
      ' ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''latex'',''FontSize'',11,',...
      ' ''String'',[''\underline{\textbf{Closed Loop Transfer Function:}}  '']);',...
      'guiele.TextTF=text(''parent'',BackgroundAxis,''horizontalalignment'',''center'',''position'',[.502 .85],''fontsize'',17,''interpreter'',''latex'',''string'',[''\textbf{'' poly2tex(num,den,'''') ''}'']);',...  %num and den are set in cnstn.EnterButtonCallback
      'vabls.ExtentTF=get(guiele.TextTF,''extent'');',...
      'if vabls.ExtentTF(3) > 1 
      'guiele.LabelTF=text(''parent'',BackgroundAxis,''interpreter'',''latex'',''fontsize'',12,''position'',[.4435-vabls.ExtentTF(3)/2 .847],''string'',{''\underline{Y}'';''R''});',...      %the horizontal position is altered as the length of the TF changes.
      'guiele.EqualSignTF=text(''parent'',BackgroundAxis,''fontsize'',13,''interpreter'',''latex'',''position'',[.4735-vabls.ExtentTF(3)/2 .847],''string'',''$\textbf{=}$'');',...
      'text(''position'',[0.4*BOX1_W*1.890 14*BOX1_H],''Units'',''Normalized'',',...
      ' ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''latex'',''FontSize'',11,',...
      ' ''String'',[''\underline{\textbf{TF Zeros are:}} '']);',...
      'if dzeroTF<10,',...
      ' for ii=1:dzeroTF,',...
      '     if isempty(zeroTF)~=1,',...
      '         text(''position'',[0.5*BOX1_W*1.890 (14-ii)*BOX1_H],''Units'',''Normalized'',',...
      '         ''Color'',BLACK,''FontWeight'',''bold'',''Interpreter'',''latex'',''FontSize'',11,',...
      '         ''String'',[''$'' ''\textbf{'' num2str(zeroTF(ii)) ''}'' ''$'']);',...
   	  '     else,',...
   	  '         text(''position'',[0.5*BOX1_W*1.890 (14-ii)*BOX1_H],''Units'',''Normalized'',',...
      '         ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''tex'',''FontSize'',11,',...
      '         ''String'','' '');',...
	  ' end,end,end,',...
      'guiele.PoleText=text(''position'',[3*BOX1_W*1.890 14*BOX1_H],''unit'',''normal'',',...
      ' ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''latex'',''FontSize'',11,',...
      ' ''String'',[''\underline{\textbf{TF Poles are:}} '']);',...
      'if dpoleTF<10,',...
      ' for jj=1:dpoleTF,',...
      '     if isempty(poleTF)~=1,',...
      '         text(''position'',[3.1*BOX1_W*1.890 (14-jj)*BOX1_H],''Units'',''Normalized'',',...
      '         ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''latex'',''FontSize'',11,',...
      '         ''String'',[''$\textbf{''  num2str(poleTF(jj)) ''}$'']);',...
      '     else,',...
   	  '         text(''position'',[3.1*BOX1_W*1.890 (14-jj)*BOX1_H],''Units'',''Normalized'',',...
      '         ''Color'',BLACK,''FontWeight'',''Demi'',''Interpreter'',''tex'',''FontSize'',11,',...
      '         ''String'','' '');',...
      ' end,end,end,',...
      ];


  %==========Error Messages
   er_CalWind=warndlg();

   cnstn








