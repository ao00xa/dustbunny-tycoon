function varargout = ModifyModelParameters(varargin)

if nargin == 2    
    fig = figure('menubar', 'none',...
                 'name', 'Model Parameters',...
                 'units', 'normalized',...
                 'closerequestfcn', 'ModifyModelParameters(''CloseButton'', gcbo, [], guidata(gcbo), [])',...
                 'position', [0.125    0.3    0.8    0.5],...
                 'numbertitle', 'off','Resize','off');
             
    set(fig,'Units','pixels');
    pos = get(fig,'Position');
    set(fig,'Position',[pos(1:2) 712 260]);

    InitializeGui
    
    % Generate a structure of handles to pass to callbacks, and store it. 
	handles = guihandles(fig);
    % modifiy handles structure
    handles.CarSimPath = varargin{1};
    handles.TFPopup = varargin{2};
    handles.DataPath = fullfile(varargin{1}, 'Data');
    guidata(fig, handles);
    
    % Initialize Values in edit boxes...
        RadioButtonSelect([], [1 0], handles, [])
    ImportVarList(handles.ImportVarList, [], handles, [])
    VarList(handles.VarList, fullfile(handles.DataPath, 'TempModelParameters.Mat'), handles, [])
    handles=guidata(fig);
    
	if nargout > 0
        varargout{1} = fig;
		% varargout{1} = 0;
	end
elseif ischar(varargin{1}) % INVOKE NAMED SUBFUNCTION OR CALLBACK
	try
		if (nargout)
			[varargout{1:nargout}] = feval(varargin{:}); % FEVAL switchyard
		else
			feval(varargin{:}); % FEVAL switchyard
		end
	catch
		disp(lasterr);
	end
end
% ____________________________________________________________________________________________________________________________

function InitializeGui
    color = get(gcf, 'color');
    % FRAME AND TITLE DETAIL....
    uicontrol('style', 'frame',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'position', [.553 0.014 .434 .958])
    uicontrol('style', 'text',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'string', 'MODEL',...
              'position', [.565 .948 .094 .042])
    uicontrol('style', 'frame',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'position', [.009 0.014 .434 .958])
    uicontrol('style', 'text',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'string', 'IMPORT',...
              'position', [.02 .948 .094 .042])
          
          
    % Model Details...
    uicontrol('style', 'text',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'string', 'Value',...
              'horizontalalignment', 'left',...
              'position', [.566 .884 .40 .042])

    uicontrol('style', 'edit',...
              'units', 'normalized',...
              'horizontalalignment', 'right',...
              'string', '0',...
              'tag', 'ValueBox',...
              'backgroundcolor', [1 1 1],...
              'position', [.565 .802 .413 .076],...
              'callback', 'ModifyModelParameters(''ValueBox'', gcbo, [], guidata(gcbo), [])')
    z = 0.1;          
    uicontrol('style', 'text',...
              'units', 'normalized',...
              'string', 'Desc:',...
              'horizontalalignment', 'left',...
              'backgroundcolor', color,...
              'tag', 'Description',...
              'position', [.566 .569+.067+z-.025 .413 .15-z+.03])
    y = 0.11;

    uicontrol('style', 'listbox',...
              'units', 'normalized',...
              'string', 'Vars..',...
              'tag', 'VarList',...
              'backgroundcolor', [1 1 1],...
              'position', [.565 .246+y .413 .365-y+z],...
              'callback', 'ModifyModelParameters(''VarList'', gcbo, [], guidata(gcbo), [])')
          
    uicontrol('style', 'edit',...
              'units', 'normalized',...
              'horizontalalignment', 'left',...
              'string', '',...
              'tag', 'LoadFileBox',...
              'backgroundcolor', [1 1 1],...
              'position', [.565 .034+.11+y .413 .076],...
              'callback', 'ModifyModelParameters(''LoadFileBox'', gcbo, [], guidata(gcbo), [])')
          
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Load',...
              'backgroundcolor', color,...
              'tag', 'LoadButton',...
              'position', [.565 .034+y .13 .085],...
              'callback', 'ModifyModelParameters(''LoadButton'', gcbo, [], guidata(gcbo), [])') %[.565 .034 .201 .085],...

    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Save',...
              'backgroundcolor', color,...
              'tag', 'SaveButton',...
              'position', [.705 .034+y .13 .085],...
              'callback', 'ModifyModelParameters(''SaveButton'', gcbo, [], guidata(gcbo), [])')
          
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Defaults',...
              'backgroundcolor', color,...
              'tag', 'DefaultsButton',...
              'position', [.846 .034+y .13 .085],...
              'callback', 'ModifyModelParameters(''DefaultsButton'', gcbo, [], guidata(gcbo), [])')
          
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Apply',...
              'tag', 'ApplyButton',...
              'backgroundcolor', color,...
              'position', [.565 .034 .201 .085],...
              'callback', 'ModifyModelParameters(''ApplyButton'', gcbo, [], guidata(gcbo), [])')
          
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Close',...
              'backgroundcolor', color,...
              'tag', 'CloseButton',...
              'position', [.775 .034 .201 .085],...
              'callback', 'ModifyModelParameters(''CloseButton'', gcbo, [], guidata(gcbo), [])')          
          
    % Import Details...
    uicontrol('style', 'text',...
              'units', 'normalized',...
              'string', 'Value',...
              'backgroundcolor', color,...
              'horizontalalignment', 'left',...
              'position', [.022 .884 .40 .042])
    uicontrol('style', 'edit',...
              'units', 'normalized',...
              'horizontalalignment', 'right',...
              'string', '0',...
              'tag', 'ImportValueBox',...
              'enable', 'inactive',...
              'backgroundcolor', [1 1 1],...
              'position', [.022 .802 .413 .076])
    uicontrol('style', 'listbox',...
              'units', 'normalized',...
              'string', 'Vars..',...
              'tag', 'ImportVarList',...
              'backgroundcolor', [1 1 1],...
              'position', [.022 .314 .413 .47],...
              'callback', 'ModifyModelParameters(''ImportVarList'', gcbo, [], guidata(gcbo), [])')
    uicontrol('style', 'radiobutton',...
              'string', 'Workspace',...
              'backgroundcolor', color,...
              'units', 'normalized',...
              'position', [.056 .21 .371 .088],...
              'value', 1,...
              'tag', 'WorkspaceRadio',...
              'callback', 'ModifyModelParameters(''RadioButtonSelect'', gcbo, [1 0], guidata(gcbo), [])')
    uicontrol('style', 'radiobutton',...
              'string', 'Mat-File',...
              'units', 'normalized',...
              'backgroundcolor', color,...
              'position', [.056 .122 .371 .088],...
              'tag', 'MatFileRadio',...
              'value', 0,...
              'callback', 'ModifyModelParameters(''RadioButtonSelect'', gcbo, [0 1], guidata(gcbo), [])')
    uicontrol('style', 'edit',...
              'units', 'normalized',...
              'horizontalalignment', 'left',...
              'string', '',...
              'tag', 'MatFileName',...
              'backgroundcolor', [1 1 1],...
              'position', [.022 .042 .213 .082],...
              'callback', 'ModifyModelParameters(''MatFileName'', gcbo, [], guidata(gcbo), [])')
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', 'Browse',...
              'backgroundcolor', color,...
              'tag', 'BrowseButton',...
              'position', [.247 .04 .185 .085],...
              'callback', 'ModifyModelParameters(''BrowseButton'', gcbo, [], guidata(gcbo), [])')
    uicontrol('style', 'pushbutton',...
              'units', 'normalized',...
              'string', '-->',...
              'backgroundcolor', color,...
              'tag', 'ImportButton',...
              'position', [.451 .802 .095 .076],...
              'callback', 'ModifyModelParameters(''ImportButton'', gcbo, [], guidata(gcbo), [])')
          

  
    
          
% -------------------------------------------------------------------------
function VarList(h, LoadFileName, handles, varargin)

    if ~isempty(LoadFileName) & exist(LoadFileName, 'file')
        TrueData = load(fullfile(handles.DataPath, 'ModelParameters.mat'));
        VerifyVarNames = sort(fieldnames(TrueData));
        try
            ModelData = load(LoadFileName);
            VarNames = sort(fieldnames(ModelData));
            if isequal(VarNames, VerifyVarNames)
                set(handles.VarList, 'string', VarNames)
                
                A = fullfile(handles.DataPath, 'TempModelParameters.mat');
                B = fullfile(handles.DataPath, 'ModelParameters.mat');
                if isequal(lower(LoadFileName), lower(A)) | isequal(lower(LoadFileName), lower(B))
                    set(handles.LoadFileBox, 'string', '')
                else
                    set(handles.LoadFileBox, 'string', LoadFileName)
                end
                handles.ModelData = ModelData;
                handles.VarNames = VarNames;
                guidata(h, handles)
            else
                errordlg('Invalid Data File')
            end
        catch
            errordlg('Invalid Data File')
        end
    elseif ~isempty(LoadFileName)
        errordlg('Invalid Data File')
    end
    VarIndex = get(h, 'value');
    VarNames = get(h, 'string');
    VarVal = getfield(handles.ModelData, char(VarNames(VarIndex)));
    set(handles.ValueBox, 'string', num2str(VarVal))
    set(handles.Description, 'string', textwrap(handles.Description, {GetVarDesc(char(VarNames(VarIndex)))}))
    
% -------------------------------------------------------------------------
function desc = GetVarDesc(Var)
    switch Var
        case 'Bm'
            desc = 'Desc: Motor viscous damping friction [kg.m^2/s]';
        case 'Jm'
            desc = 'Desc: Motor Inertia [kg.m^2]';
        case 'Kamp'
            desc = 'Desc: Amplifier gain [2 V/V]';
        case 'Kb'
            desc = 'Desc: Back emf constant [V/rad/s]';
        case 'Km'
            desc = 'Desc: Motor constant [N.m/A]';
        case 'Ks'
            desc = 'Desc: Sensor gain [V/unit output]';
        case 'La'
            desc = 'Desc: Armature Inductance [H]';
        case 'M'
            desc = 'Desc: Quarter car mass [kg]';
        case 'Ra'
            desc = 'Desc: Armature Resistance [ohm]';
        case 'c'
            desc = 'Desc: Suspension damping coefficient [N/m/s]';
        case 'k'
            desc = 'Desc: Suspension spring coefficient [N/m]';
        case 'r'
            desc = 'Desc: Motor gear radius [m]';
        otherwise
            desc = 'Desc: Unknown Parameter';
    end

            
% -------------------------------------------------------------------------
function RadioButtonSelect(h, Selected, handles, varargin)
    RadioHandles = [handles.WorkspaceRadio, handles.MatFileRadio];
    for i = 1:2
        set(RadioHandles(i), 'value', Selected(i))
    end
    VarList = [];
    if isequal(Selected, [1 0])
        VarList = evalin('base','who');
    elseif exist(get(handles.MatFileName, 'string'), 'file')
        VarList = who('-file', get(handles.MatFileName, 'string'));
    end
    set(handles.ImportVarList, 'string', VarList, 'value', 1)
    

% -------------------------------------------------------------------------
function ImportVarList(h, eventdata, handles, varargin)
    try
        VarList = get(h, 'string');
        VarIndex = get(h, 'value');
        VarName = char(VarList(VarIndex));
        if get(handles.WorkspaceRadio, 'value') % from workspace...
            VarVal = evalin('base', VarName);
        else % from mat-file
            VarStruct = load(get(handles.MatFileName, 'string'), VarName);
            VarVal = getfield(VarStruct, VarName);
        end
        % if it's a number, assign to the val box
        if isnumeric(VarVal) & isa(VarVal, 'double') & isequal(size(VarVal), [1 1])
            set(handles.ImportValueBox , 'string', num2str(VarVal))
        else
            set(handles.ImportValueBox , 'string', '0')
        end
    catch 
            set(handles.ImportValueBox , 'string', '0')
    end
    
      

% -------------------------------------------------------------------------
function BrowseButton(h, eventdata, handles, varargin)
    CurrentPath = pwd;
    try
        try
            cd(fullfile(handles.CarSimPath, 'MyFiles'))
        end
        [fname, pathname] = uigetfile('*.mat', 'Browse to Mat-File');
        if ~isequal([fname, pathname], [0,0])
            set(handles.MatFileName, 'string', fullfile(pathname, fname))
        end
        RadioButtonSelect(h, [0 1], handles, [])
    end
    cd(CurrentPath)    
   

    
% -------------------------------------------------------------------------
function MatFileName(h, eventdata, handles, varargin)
    RadioButtonSelect(h, [0 1], handles, [])

    
% -------------------------------------------------------------------------
function ImportButton(h, eventdata, handles, varargin)
    set(handles.ValueBox, 'string', get(handles.ImportValueBox, 'string'))
    ValueBox(handles.ValueBox, [], handles, [])
    % MUST RELOAD HANDLES HERE AFTER CALLING ValueBox
    
% -------------------------------------------------------------------------
function ValueBox(h, eventdata, handles, varargin)
    VarIndex = get(handles.VarList, 'value');
    VarNames = get(handles.VarList, 'string');
    VarVal = char(get(h, 'string'));
    
    
    [VarVal, Status] = str2num(VarVal);
    if ~Status % ie. Status = 0, then value is not numeric
        VarVal = 0;
        set(h, 'string', '0')
    end
    
    handles.ModelData = setfield(handles.ModelData, char(VarNames(VarIndex)), VarVal);
    guidata(h, handles)
       
    
% -------------------------------------------------------------------------
function CloseButton(h, eventdata, handles, varargin)
    h = handles.TFPopup;
    closereq
    CarSim('ShowTF', [], get(h, 'value'), guidata(h), [])

% -------------------------------------------------------------------------
function DefaultsButton(h, eventdata, handles, varargin)
    VarList(handles.VarList, fullfile(handles.DataPath, 'ModelParameters.mat'), handles, [])

% -------------------------------------------------------------------------
function LoadButton(h, eventdata, handles, varargin)
    CurrentPath = pwd;
    try
        try
            cd(fullfile(handles.CarSimPath, 'MyFiles'))
        end
        [fname, pathname] = uigetfile('*.mat', 'Browse to Model Parameter Mat-File');
        if ~isequal([fname, pathname], [0,0])
            VarList(handles.VarList, fullfile(pathname, fname), handles, [])
        end
    end
    cd(CurrentPath)
    
% -------------------------------------------------------------------------
function SaveButton(h, eventdata, handles, varargin)
    CurrentPath = pwd;
    try
        try
            cd(fullfile(handles.CarSimPath, 'MyFiles'))
        end
    
        [fname, pathname] = uiputfile('*.mat', 'Browse to Model Parameter Mat-File');
        if ~isequal([fname, pathname], [0,0])
            for i = 1:length(handles.VarNames)
                Var = char(handles.VarNames(i));
                Val = getfield(handles.ModelData, Var);
                eval([Var ' = ' num2str('Val') ';']) %eval([Var ' = ' Val ';'])
                if i == 1
                    save(fullfile(pathname, fname), Var)
                else
                    save(fullfile(pathname, fname), Var, '-APPEND')
                end
            end
        end
    catch
        errordlg('Save attempt unsuccessful, retry.')        
    end
    cd(CurrentPath)

% -------------------------------------------------------------------------
function ApplyButton(h, eventdata, handles, varargin)
    fname = fullfile(handles.DataPath, 'TempModelParameters.mat');
    for i = 1:length(handles.VarNames)
        Var = char(handles.VarNames(i));
        Val = getfield(handles.ModelData, Var);
        eval([Var ' = ' num2str('Val') ';'])
        if i == 1
            save(fname, Var)
        else
            save(fname, Var, '-APPEND')
        end
    end
    close(gcf)
    

% -------------------------------------------------------------------------
function LoadFileBox(h, eventdata, handles, varargin)
    fname = get(h, 'string');
    set(h, 'string', '')
    VarList(handles.VarList, fname, handles, [])

